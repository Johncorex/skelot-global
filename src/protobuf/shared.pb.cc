// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shared.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "shared.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tibia {
namespace protobuf {
namespace shared {

namespace {

const ::google::protobuf::EnumDescriptor* PLAYER_ACTION_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ITEM_CATEGORY_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PLAYER_PROFESSION_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ANIMATION_LOOP_TYPE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* HOOK_TYPE_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_shared_2eproto() {
  protobuf_AddDesc_shared_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "shared.proto");
  GOOGLE_CHECK(file != NULL);
  PLAYER_ACTION_descriptor_ = file->enum_type(0);
  ITEM_CATEGORY_descriptor_ = file->enum_type(1);
  PLAYER_PROFESSION_descriptor_ = file->enum_type(2);
  ANIMATION_LOOP_TYPE_descriptor_ = file->enum_type(3);
  HOOK_TYPE_descriptor_ = file->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_shared_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_shared_2eproto() {
}

void protobuf_AddDesc_shared_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014shared.proto\022\025tibia.protobuf.shared*\224\001"
    "\n\rPLAYER_ACTION\022\026\n\022PLAYER_ACTION_NONE\020\000\022"
    "\026\n\022PLAYER_ACTION_LOOK\020\001\022\025\n\021PLAYER_ACTION"
    "_USE\020\002\022\026\n\022PLAYER_ACTION_OPEN\020\003\022$\n PLAYER"
    "_ACTION_AUTOWALK_HIGHLIGHT\020\004*\263\005\n\rITEM_CA"
    "TEGORY\022\030\n\024ITEM_CATEGORY_ARMORS\020\001\022\031\n\025ITEM"
    "_CATEGORY_AMULETS\020\002\022\027\n\023ITEM_CATEGORY_BOO"
    "TS\020\003\022\034\n\030ITEM_CATEGORY_CONTAINERS\020\004\022\034\n\030IT"
    "EM_CATEGORY_DECORATION\020\005\022\026\n\022ITEM_CATEGOR"
    "Y_FOOD\020\006\022\036\n\032ITEM_CATEGORY_HELMETS_HATS\020\007"
    "\022\026\n\022ITEM_CATEGORY_LEGS\020\010\022\030\n\024ITEM_CATEGOR"
    "Y_OTHERS\020\t\022\031\n\025ITEM_CATEGORY_POTIONS\020\n\022\027\n"
    "\023ITEM_CATEGORY_RINGS\020\013\022\027\n\023ITEM_CATEGORY_"
    "RUNES\020\014\022\031\n\025ITEM_CATEGORY_SHIELDS\020\r\022\027\n\023IT"
    "EM_CATEGORY_TOOLS\020\016\022\033\n\027ITEM_CATEGORY_VAL"
    "UABLES\020\017\022\034\n\030ITEM_CATEGORY_AMMUNITION\020\020\022\026"
    "\n\022ITEM_CATEGORY_AXES\020\021\022\027\n\023ITEM_CATEGORY_"
    "CLUBS\020\022\022\"\n\036ITEM_CATEGORY_DISTANCE_WEAPON"
    "S\020\023\022\030\n\024ITEM_CATEGORY_SWORDS\020\024\022\034\n\030ITEM_CA"
    "TEGORY_WANDS_RODS\020\025\022!\n\035ITEM_CATEGORY_PRE"
    "MIUM_SCROLLS\020\026\022\035\n\031ITEM_CATEGORY_TIBIA_CO"
    "INS\020\027\022#\n\037ITEM_CATEGORY_CREATURE_PRODUCTS"
    "\020\030*\355\001\n\021PLAYER_PROFESSION\022\"\n\025PLAYER_PROFE"
    "SSION_ANY\020\377\377\377\377\377\377\377\377\377\001\022\032\n\026PLAYER_PROFESSIO"
    "N_NONE\020\000\022\034\n\030PLAYER_PROFESSION_KNIGHT\020\001\022\035"
    "\n\031PLAYER_PROFESSION_PALADIN\020\002\022\036\n\032PLAYER_"
    "PROFESSION_SORCERER\020\003\022\033\n\027PLAYER_PROFESSI"
    "ON_DRUID\020\004\022\036\n\032PLAYER_PROFESSION_PROMOTED"
    "\020\n*\203\001\n\023ANIMATION_LOOP_TYPE\022)\n\034ANIMATION_"
    "LOOP_TYPE_PINGPONG\020\377\377\377\377\377\377\377\377\377\001\022 \n\034ANIMATI"
    "ON_LOOP_TYPE_INFINITE\020\000\022\037\n\033ANIMATION_LOO"
    "P_TYPE_COUNTED\020\001*4\n\tHOOK_TYPE\022\023\n\017HOOK_TY"
    "PE_SOUTH\020\001\022\022\n\016HOOK_TYPE_EAST\020\002", 1310);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "shared.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_shared_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_shared_2eproto {
  StaticDescriptorInitializer_shared_2eproto() {
    protobuf_AddDesc_shared_2eproto();
  }
} static_descriptor_initializer_shared_2eproto_;
const ::google::protobuf::EnumDescriptor* PLAYER_ACTION_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PLAYER_ACTION_descriptor_;
}
bool PLAYER_ACTION_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ITEM_CATEGORY_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ITEM_CATEGORY_descriptor_;
}
bool ITEM_CATEGORY_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PLAYER_PROFESSION_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PLAYER_PROFESSION_descriptor_;
}
bool PLAYER_PROFESSION_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ANIMATION_LOOP_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ANIMATION_LOOP_TYPE_descriptor_;
}
bool ANIMATION_LOOP_TYPE_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HOOK_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HOOK_TYPE_descriptor_;
}
bool HOOK_TYPE_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace shared
}  // namespace protobuf
}  // namespace tibia

// @@protoc_insertion_point(global_scope)
