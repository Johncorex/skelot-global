// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appearances.proto

#ifndef PROTOBUF_appearances_2eproto__INCLUDED
#define PROTOBUF_appearances_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "shared.pb.h"
// @@protoc_insertion_point(includes)

namespace tibia {
namespace protobuf {
namespace appearances {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_appearances_2eproto();
void protobuf_AssignDesc_appearances_2eproto();
void protobuf_ShutdownFile_appearances_2eproto();

class Appearances;
class SpritePhase;
class SpriteAnimation;
class Box;
class SpriteInfo;
class FrameGroup;
class Appearance;
class AppearanceFlags;
class AppearanceFlagBank;
class AppearanceFlagWrite;
class AppearanceFlagWriteOnce;
class AppearanceFlagLight;
class AppearanceFlagHeight;
class AppearanceFlagShift;
class AppearanceFlagClothes;
class AppearanceFlagDefaultAction;
class AppearanceFlagMarket;
class AppearanceFlagNPC;
class AppearanceFlagAutomap;
class AppearanceFlagHook;
class AppearanceFlagLenshelp;
class AppearanceFlagChangedToExpire;
class AppearanceFlagCyclopedia;
class SpecialMeaningAppearanceIds;

enum FIXED_FRAME_GROUP {
  FIXED_FRAME_GROUP_OUTFIT_IDLE = 0,
  FIXED_FRAME_GROUP_OUTFIT_MOVING = 1,
  FIXED_FRAME_GROUP_OBJECT_INITIAL = 2
};
bool FIXED_FRAME_GROUP_IsValid(int value);
const FIXED_FRAME_GROUP FIXED_FRAME_GROUP_MIN = FIXED_FRAME_GROUP_OUTFIT_IDLE;
const FIXED_FRAME_GROUP FIXED_FRAME_GROUP_MAX = FIXED_FRAME_GROUP_OBJECT_INITIAL;
const int FIXED_FRAME_GROUP_ARRAYSIZE = FIXED_FRAME_GROUP_MAX + 1;

const ::google::protobuf::EnumDescriptor* FIXED_FRAME_GROUP_descriptor();
inline const ::std::string& FIXED_FRAME_GROUP_Name(FIXED_FRAME_GROUP value) {
  return ::google::protobuf::internal::NameOfEnum(
    FIXED_FRAME_GROUP_descriptor(), value);
}
inline bool FIXED_FRAME_GROUP_Parse(
    const ::std::string& name, FIXED_FRAME_GROUP* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FIXED_FRAME_GROUP>(
    FIXED_FRAME_GROUP_descriptor(), name, value);
}
// ===================================================================

class Appearances : public ::google::protobuf::Message {
 public:
  Appearances();
  virtual ~Appearances();

  Appearances(const Appearances& from);

  inline Appearances& operator=(const Appearances& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Appearances& default_instance();

  void Swap(Appearances* other);

  // implements Message ----------------------------------------------

  Appearances* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Appearances& from);
  void MergeFrom(const Appearances& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tibia.protobuf.appearances.Appearance object = 1;
  inline int object_size() const;
  inline void clear_object();
  static const int kObjectFieldNumber = 1;
  inline const ::tibia::protobuf::appearances::Appearance& object(int index) const;
  inline ::tibia::protobuf::appearances::Appearance* mutable_object(int index);
  inline ::tibia::protobuf::appearances::Appearance* add_object();
  inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >&
      object() const;
  inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >*
      mutable_object();

  // repeated .tibia.protobuf.appearances.Appearance outfit = 2;
  inline int outfit_size() const;
  inline void clear_outfit();
  static const int kOutfitFieldNumber = 2;
  inline const ::tibia::protobuf::appearances::Appearance& outfit(int index) const;
  inline ::tibia::protobuf::appearances::Appearance* mutable_outfit(int index);
  inline ::tibia::protobuf::appearances::Appearance* add_outfit();
  inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >&
      outfit() const;
  inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >*
      mutable_outfit();

  // repeated .tibia.protobuf.appearances.Appearance effect = 3;
  inline int effect_size() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 3;
  inline const ::tibia::protobuf::appearances::Appearance& effect(int index) const;
  inline ::tibia::protobuf::appearances::Appearance* mutable_effect(int index);
  inline ::tibia::protobuf::appearances::Appearance* add_effect();
  inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >&
      effect() const;
  inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >*
      mutable_effect();

  // repeated .tibia.protobuf.appearances.Appearance missile = 4;
  inline int missile_size() const;
  inline void clear_missile();
  static const int kMissileFieldNumber = 4;
  inline const ::tibia::protobuf::appearances::Appearance& missile(int index) const;
  inline ::tibia::protobuf::appearances::Appearance* mutable_missile(int index);
  inline ::tibia::protobuf::appearances::Appearance* add_missile();
  inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >&
      missile() const;
  inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >*
      mutable_missile();

  // optional .tibia.protobuf.appearances.SpecialMeaningAppearanceIds special_meaning_appearance_ids = 5;
  inline bool has_special_meaning_appearance_ids() const;
  inline void clear_special_meaning_appearance_ids();
  static const int kSpecialMeaningAppearanceIdsFieldNumber = 5;
  inline const ::tibia::protobuf::appearances::SpecialMeaningAppearanceIds& special_meaning_appearance_ids() const;
  inline ::tibia::protobuf::appearances::SpecialMeaningAppearanceIds* mutable_special_meaning_appearance_ids();
  inline ::tibia::protobuf::appearances::SpecialMeaningAppearanceIds* release_special_meaning_appearance_ids();
  inline void set_allocated_special_meaning_appearance_ids(::tibia::protobuf::appearances::SpecialMeaningAppearanceIds* special_meaning_appearance_ids);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.Appearances)
 private:
  inline void set_has_special_meaning_appearance_ids();
  inline void clear_has_special_meaning_appearance_ids();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance > object_;
  ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance > outfit_;
  ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance > effect_;
  ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance > missile_;
  ::tibia::protobuf::appearances::SpecialMeaningAppearanceIds* special_meaning_appearance_ids_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static Appearances* default_instance_;
};
// -------------------------------------------------------------------

class SpritePhase : public ::google::protobuf::Message {
 public:
  SpritePhase();
  virtual ~SpritePhase();

  SpritePhase(const SpritePhase& from);

  inline SpritePhase& operator=(const SpritePhase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpritePhase& default_instance();

  void Swap(SpritePhase* other);

  // implements Message ----------------------------------------------

  SpritePhase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpritePhase& from);
  void MergeFrom(const SpritePhase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 duration_min = 1;
  inline bool has_duration_min() const;
  inline void clear_duration_min();
  static const int kDurationMinFieldNumber = 1;
  inline ::google::protobuf::uint32 duration_min() const;
  inline void set_duration_min(::google::protobuf::uint32 value);

  // optional uint32 duration_max = 2;
  inline bool has_duration_max() const;
  inline void clear_duration_max();
  static const int kDurationMaxFieldNumber = 2;
  inline ::google::protobuf::uint32 duration_max() const;
  inline void set_duration_max(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.SpritePhase)
 private:
  inline void set_has_duration_min();
  inline void clear_has_duration_min();
  inline void set_has_duration_max();
  inline void clear_has_duration_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 duration_min_;
  ::google::protobuf::uint32 duration_max_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static SpritePhase* default_instance_;
};
// -------------------------------------------------------------------

class SpriteAnimation : public ::google::protobuf::Message {
 public:
  SpriteAnimation();
  virtual ~SpriteAnimation();

  SpriteAnimation(const SpriteAnimation& from);

  inline SpriteAnimation& operator=(const SpriteAnimation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpriteAnimation& default_instance();

  void Swap(SpriteAnimation* other);

  // implements Message ----------------------------------------------

  SpriteAnimation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpriteAnimation& from);
  void MergeFrom(const SpriteAnimation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 default_start_phase = 1;
  inline bool has_default_start_phase() const;
  inline void clear_default_start_phase();
  static const int kDefaultStartPhaseFieldNumber = 1;
  inline ::google::protobuf::uint32 default_start_phase() const;
  inline void set_default_start_phase(::google::protobuf::uint32 value);

  // optional bool synchronized = 2;
  inline bool has_synchronized() const;
  inline void clear_synchronized();
  static const int kSynchronizedFieldNumber = 2;
  inline bool synchronized() const;
  inline void set_synchronized(bool value);

  // optional bool random_start_phase = 3;
  inline bool has_random_start_phase() const;
  inline void clear_random_start_phase();
  static const int kRandomStartPhaseFieldNumber = 3;
  inline bool random_start_phase() const;
  inline void set_random_start_phase(bool value);

  // optional .tibia.protobuf.shared.ANIMATION_LOOP_TYPE loop_type = 4;
  inline bool has_loop_type() const;
  inline void clear_loop_type();
  static const int kLoopTypeFieldNumber = 4;
  inline ::tibia::protobuf::shared::ANIMATION_LOOP_TYPE loop_type() const;
  inline void set_loop_type(::tibia::protobuf::shared::ANIMATION_LOOP_TYPE value);

  // optional uint32 loop_count = 5;
  inline bool has_loop_count() const;
  inline void clear_loop_count();
  static const int kLoopCountFieldNumber = 5;
  inline ::google::protobuf::uint32 loop_count() const;
  inline void set_loop_count(::google::protobuf::uint32 value);

  // repeated .tibia.protobuf.appearances.SpritePhase sprite_phase = 6;
  inline int sprite_phase_size() const;
  inline void clear_sprite_phase();
  static const int kSpritePhaseFieldNumber = 6;
  inline const ::tibia::protobuf::appearances::SpritePhase& sprite_phase(int index) const;
  inline ::tibia::protobuf::appearances::SpritePhase* mutable_sprite_phase(int index);
  inline ::tibia::protobuf::appearances::SpritePhase* add_sprite_phase();
  inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::SpritePhase >&
      sprite_phase() const;
  inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::SpritePhase >*
      mutable_sprite_phase();

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.SpriteAnimation)
 private:
  inline void set_has_default_start_phase();
  inline void clear_has_default_start_phase();
  inline void set_has_synchronized();
  inline void clear_has_synchronized();
  inline void set_has_random_start_phase();
  inline void clear_has_random_start_phase();
  inline void set_has_loop_type();
  inline void clear_has_loop_type();
  inline void set_has_loop_count();
  inline void clear_has_loop_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 default_start_phase_;
  bool synchronized_;
  bool random_start_phase_;
  int loop_type_;
  ::google::protobuf::uint32 loop_count_;
  ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::SpritePhase > sprite_phase_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static SpriteAnimation* default_instance_;
};
// -------------------------------------------------------------------

class Box : public ::google::protobuf::Message {
 public:
  Box();
  virtual ~Box();

  Box(const Box& from);

  inline Box& operator=(const Box& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Box& default_instance();

  void Swap(Box* other);

  // implements Message ----------------------------------------------

  Box* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Box& from);
  void MergeFrom(const Box& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 width = 3;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 3;
  inline ::google::protobuf::uint32 width() const;
  inline void set_width(::google::protobuf::uint32 value);

  // optional uint32 height = 4;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 4;
  inline ::google::protobuf::uint32 height() const;
  inline void set_height(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.Box)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static Box* default_instance_;
};
// -------------------------------------------------------------------

class SpriteInfo : public ::google::protobuf::Message {
 public:
  SpriteInfo();
  virtual ~SpriteInfo();

  SpriteInfo(const SpriteInfo& from);

  inline SpriteInfo& operator=(const SpriteInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpriteInfo& default_instance();

  void Swap(SpriteInfo* other);

  // implements Message ----------------------------------------------

  SpriteInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpriteInfo& from);
  void MergeFrom(const SpriteInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pattern_width = 1;
  inline bool has_pattern_width() const;
  inline void clear_pattern_width();
  static const int kPatternWidthFieldNumber = 1;
  inline ::google::protobuf::uint32 pattern_width() const;
  inline void set_pattern_width(::google::protobuf::uint32 value);

  // optional uint32 pattern_height = 2;
  inline bool has_pattern_height() const;
  inline void clear_pattern_height();
  static const int kPatternHeightFieldNumber = 2;
  inline ::google::protobuf::uint32 pattern_height() const;
  inline void set_pattern_height(::google::protobuf::uint32 value);

  // optional uint32 pattern_depth = 3;
  inline bool has_pattern_depth() const;
  inline void clear_pattern_depth();
  static const int kPatternDepthFieldNumber = 3;
  inline ::google::protobuf::uint32 pattern_depth() const;
  inline void set_pattern_depth(::google::protobuf::uint32 value);

  // optional uint32 layers = 4;
  inline bool has_layers() const;
  inline void clear_layers();
  static const int kLayersFieldNumber = 4;
  inline ::google::protobuf::uint32 layers() const;
  inline void set_layers(::google::protobuf::uint32 value);

  // repeated uint32 sprite_id = 5;
  inline int sprite_id_size() const;
  inline void clear_sprite_id();
  static const int kSpriteIdFieldNumber = 5;
  inline ::google::protobuf::uint32 sprite_id(int index) const;
  inline void set_sprite_id(int index, ::google::protobuf::uint32 value);
  inline void add_sprite_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sprite_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sprite_id();

  // optional uint32 bounding_square = 7;
  inline bool has_bounding_square() const;
  inline void clear_bounding_square();
  static const int kBoundingSquareFieldNumber = 7;
  inline ::google::protobuf::uint32 bounding_square() const;
  inline void set_bounding_square(::google::protobuf::uint32 value);

  // optional .tibia.protobuf.appearances.SpriteAnimation animation = 6;
  inline bool has_animation() const;
  inline void clear_animation();
  static const int kAnimationFieldNumber = 6;
  inline const ::tibia::protobuf::appearances::SpriteAnimation& animation() const;
  inline ::tibia::protobuf::appearances::SpriteAnimation* mutable_animation();
  inline ::tibia::protobuf::appearances::SpriteAnimation* release_animation();
  inline void set_allocated_animation(::tibia::protobuf::appearances::SpriteAnimation* animation);

  // optional bool is_opaque = 8;
  inline bool has_is_opaque() const;
  inline void clear_is_opaque();
  static const int kIsOpaqueFieldNumber = 8;
  inline bool is_opaque() const;
  inline void set_is_opaque(bool value);

  // repeated .tibia.protobuf.appearances.Box bounding_box_per_direction = 9;
  inline int bounding_box_per_direction_size() const;
  inline void clear_bounding_box_per_direction();
  static const int kBoundingBoxPerDirectionFieldNumber = 9;
  inline const ::tibia::protobuf::appearances::Box& bounding_box_per_direction(int index) const;
  inline ::tibia::protobuf::appearances::Box* mutable_bounding_box_per_direction(int index);
  inline ::tibia::protobuf::appearances::Box* add_bounding_box_per_direction();
  inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Box >&
      bounding_box_per_direction() const;
  inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Box >*
      mutable_bounding_box_per_direction();

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.SpriteInfo)
 private:
  inline void set_has_pattern_width();
  inline void clear_has_pattern_width();
  inline void set_has_pattern_height();
  inline void clear_has_pattern_height();
  inline void set_has_pattern_depth();
  inline void clear_has_pattern_depth();
  inline void set_has_layers();
  inline void clear_has_layers();
  inline void set_has_bounding_square();
  inline void clear_has_bounding_square();
  inline void set_has_animation();
  inline void clear_has_animation();
  inline void set_has_is_opaque();
  inline void clear_has_is_opaque();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pattern_width_;
  ::google::protobuf::uint32 pattern_height_;
  ::google::protobuf::uint32 pattern_depth_;
  ::google::protobuf::uint32 layers_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sprite_id_;
  ::tibia::protobuf::appearances::SpriteAnimation* animation_;
  ::google::protobuf::uint32 bounding_square_;
  bool is_opaque_;
  ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Box > bounding_box_per_direction_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static SpriteInfo* default_instance_;
};
// -------------------------------------------------------------------

class FrameGroup : public ::google::protobuf::Message {
 public:
  FrameGroup();
  virtual ~FrameGroup();

  FrameGroup(const FrameGroup& from);

  inline FrameGroup& operator=(const FrameGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameGroup& default_instance();

  void Swap(FrameGroup* other);

  // implements Message ----------------------------------------------

  FrameGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FrameGroup& from);
  void MergeFrom(const FrameGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .tibia.protobuf.appearances.FIXED_FRAME_GROUP fixed_frame_group = 1;
  inline bool has_fixed_frame_group() const;
  inline void clear_fixed_frame_group();
  static const int kFixedFrameGroupFieldNumber = 1;
  inline ::tibia::protobuf::appearances::FIXED_FRAME_GROUP fixed_frame_group() const;
  inline void set_fixed_frame_group(::tibia::protobuf::appearances::FIXED_FRAME_GROUP value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .tibia.protobuf.appearances.SpriteInfo sprite_info = 3;
  inline bool has_sprite_info() const;
  inline void clear_sprite_info();
  static const int kSpriteInfoFieldNumber = 3;
  inline const ::tibia::protobuf::appearances::SpriteInfo& sprite_info() const;
  inline ::tibia::protobuf::appearances::SpriteInfo* mutable_sprite_info();
  inline ::tibia::protobuf::appearances::SpriteInfo* release_sprite_info();
  inline void set_allocated_sprite_info(::tibia::protobuf::appearances::SpriteInfo* sprite_info);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.FrameGroup)
 private:
  inline void set_has_fixed_frame_group();
  inline void clear_has_fixed_frame_group();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_sprite_info();
  inline void clear_has_sprite_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int fixed_frame_group_;
  ::google::protobuf::uint32 id_;
  ::tibia::protobuf::appearances::SpriteInfo* sprite_info_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static FrameGroup* default_instance_;
};
// -------------------------------------------------------------------

class Appearance : public ::google::protobuf::Message {
 public:
  Appearance();
  virtual ~Appearance();

  Appearance(const Appearance& from);

  inline Appearance& operator=(const Appearance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Appearance& default_instance();

  void Swap(Appearance* other);

  // implements Message ----------------------------------------------

  Appearance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Appearance& from);
  void MergeFrom(const Appearance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated .tibia.protobuf.appearances.FrameGroup frame_group = 2;
  inline int frame_group_size() const;
  inline void clear_frame_group();
  static const int kFrameGroupFieldNumber = 2;
  inline const ::tibia::protobuf::appearances::FrameGroup& frame_group(int index) const;
  inline ::tibia::protobuf::appearances::FrameGroup* mutable_frame_group(int index);
  inline ::tibia::protobuf::appearances::FrameGroup* add_frame_group();
  inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::FrameGroup >&
      frame_group() const;
  inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::FrameGroup >*
      mutable_frame_group();

  // optional .tibia.protobuf.appearances.AppearanceFlags flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline const ::tibia::protobuf::appearances::AppearanceFlags& flags() const;
  inline ::tibia::protobuf::appearances::AppearanceFlags* mutable_flags();
  inline ::tibia::protobuf::appearances::AppearanceFlags* release_flags();
  inline void set_allocated_flags(::tibia::protobuf::appearances::AppearanceFlags* flags);

  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.Appearance)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::FrameGroup > frame_group_;
  ::tibia::protobuf::appearances::AppearanceFlags* flags_;
  ::std::string* name_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static Appearance* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlags : public ::google::protobuf::Message {
 public:
  AppearanceFlags();
  virtual ~AppearanceFlags();

  AppearanceFlags(const AppearanceFlags& from);

  inline AppearanceFlags& operator=(const AppearanceFlags& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlags& default_instance();

  void Swap(AppearanceFlags* other);

  // implements Message ----------------------------------------------

  AppearanceFlags* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlags& from);
  void MergeFrom(const AppearanceFlags& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .tibia.protobuf.appearances.AppearanceFlagBank bank = 1;
  inline bool has_bank() const;
  inline void clear_bank();
  static const int kBankFieldNumber = 1;
  inline const ::tibia::protobuf::appearances::AppearanceFlagBank& bank() const;
  inline ::tibia::protobuf::appearances::AppearanceFlagBank* mutable_bank();
  inline ::tibia::protobuf::appearances::AppearanceFlagBank* release_bank();
  inline void set_allocated_bank(::tibia::protobuf::appearances::AppearanceFlagBank* bank);

  // optional bool clip = 2;
  inline bool has_clip() const;
  inline void clear_clip();
  static const int kClipFieldNumber = 2;
  inline bool clip() const;
  inline void set_clip(bool value);

  // optional bool bottom = 3;
  inline bool has_bottom() const;
  inline void clear_bottom();
  static const int kBottomFieldNumber = 3;
  inline bool bottom() const;
  inline void set_bottom(bool value);

  // optional bool top = 4;
  inline bool has_top() const;
  inline void clear_top();
  static const int kTopFieldNumber = 4;
  inline bool top() const;
  inline void set_top(bool value);

  // optional bool container = 5;
  inline bool has_container() const;
  inline void clear_container();
  static const int kContainerFieldNumber = 5;
  inline bool container() const;
  inline void set_container(bool value);

  // optional bool cumulative = 6;
  inline bool has_cumulative() const;
  inline void clear_cumulative();
  static const int kCumulativeFieldNumber = 6;
  inline bool cumulative() const;
  inline void set_cumulative(bool value);

  // optional bool usable = 7;
  inline bool has_usable() const;
  inline void clear_usable();
  static const int kUsableFieldNumber = 7;
  inline bool usable() const;
  inline void set_usable(bool value);

  // optional bool forceuse = 8;
  inline bool has_forceuse() const;
  inline void clear_forceuse();
  static const int kForceuseFieldNumber = 8;
  inline bool forceuse() const;
  inline void set_forceuse(bool value);

  // optional bool multiuse = 9;
  inline bool has_multiuse() const;
  inline void clear_multiuse();
  static const int kMultiuseFieldNumber = 9;
  inline bool multiuse() const;
  inline void set_multiuse(bool value);

  // optional .tibia.protobuf.appearances.AppearanceFlagWrite write = 10;
  inline bool has_write() const;
  inline void clear_write();
  static const int kWriteFieldNumber = 10;
  inline const ::tibia::protobuf::appearances::AppearanceFlagWrite& write() const;
  inline ::tibia::protobuf::appearances::AppearanceFlagWrite* mutable_write();
  inline ::tibia::protobuf::appearances::AppearanceFlagWrite* release_write();
  inline void set_allocated_write(::tibia::protobuf::appearances::AppearanceFlagWrite* write);

  // optional .tibia.protobuf.appearances.AppearanceFlagWriteOnce write_once = 11;
  inline bool has_write_once() const;
  inline void clear_write_once();
  static const int kWriteOnceFieldNumber = 11;
  inline const ::tibia::protobuf::appearances::AppearanceFlagWriteOnce& write_once() const;
  inline ::tibia::protobuf::appearances::AppearanceFlagWriteOnce* mutable_write_once();
  inline ::tibia::protobuf::appearances::AppearanceFlagWriteOnce* release_write_once();
  inline void set_allocated_write_once(::tibia::protobuf::appearances::AppearanceFlagWriteOnce* write_once);

  // optional bool liquidpool = 12;
  inline bool has_liquidpool() const;
  inline void clear_liquidpool();
  static const int kLiquidpoolFieldNumber = 12;
  inline bool liquidpool() const;
  inline void set_liquidpool(bool value);

  // optional bool unpass = 13;
  inline bool has_unpass() const;
  inline void clear_unpass();
  static const int kUnpassFieldNumber = 13;
  inline bool unpass() const;
  inline void set_unpass(bool value);

  // optional bool unmove = 14;
  inline bool has_unmove() const;
  inline void clear_unmove();
  static const int kUnmoveFieldNumber = 14;
  inline bool unmove() const;
  inline void set_unmove(bool value);

  // optional bool unsight = 15;
  inline bool has_unsight() const;
  inline void clear_unsight();
  static const int kUnsightFieldNumber = 15;
  inline bool unsight() const;
  inline void set_unsight(bool value);

  // optional bool avoid = 16;
  inline bool has_avoid() const;
  inline void clear_avoid();
  static const int kAvoidFieldNumber = 16;
  inline bool avoid() const;
  inline void set_avoid(bool value);

  // optional bool no_movement_animation = 17;
  inline bool has_no_movement_animation() const;
  inline void clear_no_movement_animation();
  static const int kNoMovementAnimationFieldNumber = 17;
  inline bool no_movement_animation() const;
  inline void set_no_movement_animation(bool value);

  // optional bool take = 18;
  inline bool has_take() const;
  inline void clear_take();
  static const int kTakeFieldNumber = 18;
  inline bool take() const;
  inline void set_take(bool value);

  // optional bool liquidcontainer = 19;
  inline bool has_liquidcontainer() const;
  inline void clear_liquidcontainer();
  static const int kLiquidcontainerFieldNumber = 19;
  inline bool liquidcontainer() const;
  inline void set_liquidcontainer(bool value);

  // optional bool hang = 20;
  inline bool has_hang() const;
  inline void clear_hang();
  static const int kHangFieldNumber = 20;
  inline bool hang() const;
  inline void set_hang(bool value);

  // optional .tibia.protobuf.appearances.AppearanceFlagHook hook = 21;
  inline bool has_hook() const;
  inline void clear_hook();
  static const int kHookFieldNumber = 21;
  inline const ::tibia::protobuf::appearances::AppearanceFlagHook& hook() const;
  inline ::tibia::protobuf::appearances::AppearanceFlagHook* mutable_hook();
  inline ::tibia::protobuf::appearances::AppearanceFlagHook* release_hook();
  inline void set_allocated_hook(::tibia::protobuf::appearances::AppearanceFlagHook* hook);

  // optional bool rotate = 22;
  inline bool has_rotate() const;
  inline void clear_rotate();
  static const int kRotateFieldNumber = 22;
  inline bool rotate() const;
  inline void set_rotate(bool value);

  // optional .tibia.protobuf.appearances.AppearanceFlagLight light = 23;
  inline bool has_light() const;
  inline void clear_light();
  static const int kLightFieldNumber = 23;
  inline const ::tibia::protobuf::appearances::AppearanceFlagLight& light() const;
  inline ::tibia::protobuf::appearances::AppearanceFlagLight* mutable_light();
  inline ::tibia::protobuf::appearances::AppearanceFlagLight* release_light();
  inline void set_allocated_light(::tibia::protobuf::appearances::AppearanceFlagLight* light);

  // optional bool dont_hide = 24;
  inline bool has_dont_hide() const;
  inline void clear_dont_hide();
  static const int kDontHideFieldNumber = 24;
  inline bool dont_hide() const;
  inline void set_dont_hide(bool value);

  // optional bool translucent = 25;
  inline bool has_translucent() const;
  inline void clear_translucent();
  static const int kTranslucentFieldNumber = 25;
  inline bool translucent() const;
  inline void set_translucent(bool value);

  // optional .tibia.protobuf.appearances.AppearanceFlagShift shift = 26;
  inline bool has_shift() const;
  inline void clear_shift();
  static const int kShiftFieldNumber = 26;
  inline const ::tibia::protobuf::appearances::AppearanceFlagShift& shift() const;
  inline ::tibia::protobuf::appearances::AppearanceFlagShift* mutable_shift();
  inline ::tibia::protobuf::appearances::AppearanceFlagShift* release_shift();
  inline void set_allocated_shift(::tibia::protobuf::appearances::AppearanceFlagShift* shift);

  // optional .tibia.protobuf.appearances.AppearanceFlagHeight height = 27;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 27;
  inline const ::tibia::protobuf::appearances::AppearanceFlagHeight& height() const;
  inline ::tibia::protobuf::appearances::AppearanceFlagHeight* mutable_height();
  inline ::tibia::protobuf::appearances::AppearanceFlagHeight* release_height();
  inline void set_allocated_height(::tibia::protobuf::appearances::AppearanceFlagHeight* height);

  // optional bool lying_object = 28;
  inline bool has_lying_object() const;
  inline void clear_lying_object();
  static const int kLyingObjectFieldNumber = 28;
  inline bool lying_object() const;
  inline void set_lying_object(bool value);

  // optional bool animate_always = 29;
  inline bool has_animate_always() const;
  inline void clear_animate_always();
  static const int kAnimateAlwaysFieldNumber = 29;
  inline bool animate_always() const;
  inline void set_animate_always(bool value);

  // optional .tibia.protobuf.appearances.AppearanceFlagAutomap automap = 30;
  inline bool has_automap() const;
  inline void clear_automap();
  static const int kAutomapFieldNumber = 30;
  inline const ::tibia::protobuf::appearances::AppearanceFlagAutomap& automap() const;
  inline ::tibia::protobuf::appearances::AppearanceFlagAutomap* mutable_automap();
  inline ::tibia::protobuf::appearances::AppearanceFlagAutomap* release_automap();
  inline void set_allocated_automap(::tibia::protobuf::appearances::AppearanceFlagAutomap* automap);

  // optional .tibia.protobuf.appearances.AppearanceFlagLenshelp lenshelp = 31;
  inline bool has_lenshelp() const;
  inline void clear_lenshelp();
  static const int kLenshelpFieldNumber = 31;
  inline const ::tibia::protobuf::appearances::AppearanceFlagLenshelp& lenshelp() const;
  inline ::tibia::protobuf::appearances::AppearanceFlagLenshelp* mutable_lenshelp();
  inline ::tibia::protobuf::appearances::AppearanceFlagLenshelp* release_lenshelp();
  inline void set_allocated_lenshelp(::tibia::protobuf::appearances::AppearanceFlagLenshelp* lenshelp);

  // optional bool fullbank = 32;
  inline bool has_fullbank() const;
  inline void clear_fullbank();
  static const int kFullbankFieldNumber = 32;
  inline bool fullbank() const;
  inline void set_fullbank(bool value);

  // optional bool ignore_look = 33;
  inline bool has_ignore_look() const;
  inline void clear_ignore_look();
  static const int kIgnoreLookFieldNumber = 33;
  inline bool ignore_look() const;
  inline void set_ignore_look(bool value);

  // optional .tibia.protobuf.appearances.AppearanceFlagClothes clothes = 34;
  inline bool has_clothes() const;
  inline void clear_clothes();
  static const int kClothesFieldNumber = 34;
  inline const ::tibia::protobuf::appearances::AppearanceFlagClothes& clothes() const;
  inline ::tibia::protobuf::appearances::AppearanceFlagClothes* mutable_clothes();
  inline ::tibia::protobuf::appearances::AppearanceFlagClothes* release_clothes();
  inline void set_allocated_clothes(::tibia::protobuf::appearances::AppearanceFlagClothes* clothes);

  // optional .tibia.protobuf.appearances.AppearanceFlagDefaultAction default_action = 35;
  inline bool has_default_action() const;
  inline void clear_default_action();
  static const int kDefaultActionFieldNumber = 35;
  inline const ::tibia::protobuf::appearances::AppearanceFlagDefaultAction& default_action() const;
  inline ::tibia::protobuf::appearances::AppearanceFlagDefaultAction* mutable_default_action();
  inline ::tibia::protobuf::appearances::AppearanceFlagDefaultAction* release_default_action();
  inline void set_allocated_default_action(::tibia::protobuf::appearances::AppearanceFlagDefaultAction* default_action);

  // optional .tibia.protobuf.appearances.AppearanceFlagMarket market = 36;
  inline bool has_market() const;
  inline void clear_market();
  static const int kMarketFieldNumber = 36;
  inline const ::tibia::protobuf::appearances::AppearanceFlagMarket& market() const;
  inline ::tibia::protobuf::appearances::AppearanceFlagMarket* mutable_market();
  inline ::tibia::protobuf::appearances::AppearanceFlagMarket* release_market();
  inline void set_allocated_market(::tibia::protobuf::appearances::AppearanceFlagMarket* market);

  // optional bool wrap = 37;
  inline bool has_wrap() const;
  inline void clear_wrap();
  static const int kWrapFieldNumber = 37;
  inline bool wrap() const;
  inline void set_wrap(bool value);

  // optional bool unwrap = 38;
  inline bool has_unwrap() const;
  inline void clear_unwrap();
  static const int kUnwrapFieldNumber = 38;
  inline bool unwrap() const;
  inline void set_unwrap(bool value);

  // optional bool topeffect = 39;
  inline bool has_topeffect() const;
  inline void clear_topeffect();
  static const int kTopeffectFieldNumber = 39;
  inline bool topeffect() const;
  inline void set_topeffect(bool value);

  // repeated .tibia.protobuf.appearances.AppearanceFlagNPC npcsaledata = 40;
  inline int npcsaledata_size() const;
  inline void clear_npcsaledata();
  static const int kNpcsaledataFieldNumber = 40;
  inline const ::tibia::protobuf::appearances::AppearanceFlagNPC& npcsaledata(int index) const;
  inline ::tibia::protobuf::appearances::AppearanceFlagNPC* mutable_npcsaledata(int index);
  inline ::tibia::protobuf::appearances::AppearanceFlagNPC* add_npcsaledata();
  inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::AppearanceFlagNPC >&
      npcsaledata() const;
  inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::AppearanceFlagNPC >*
      mutable_npcsaledata();

  // optional .tibia.protobuf.appearances.AppearanceFlagChangedToExpire changedtoexpire = 41;
  inline bool has_changedtoexpire() const;
  inline void clear_changedtoexpire();
  static const int kChangedtoexpireFieldNumber = 41;
  inline const ::tibia::protobuf::appearances::AppearanceFlagChangedToExpire& changedtoexpire() const;
  inline ::tibia::protobuf::appearances::AppearanceFlagChangedToExpire* mutable_changedtoexpire();
  inline ::tibia::protobuf::appearances::AppearanceFlagChangedToExpire* release_changedtoexpire();
  inline void set_allocated_changedtoexpire(::tibia::protobuf::appearances::AppearanceFlagChangedToExpire* changedtoexpire);

  // optional bool corpse = 42;
  inline bool has_corpse() const;
  inline void clear_corpse();
  static const int kCorpseFieldNumber = 42;
  inline bool corpse() const;
  inline void set_corpse(bool value);

  // optional bool player_corpse = 43;
  inline bool has_player_corpse() const;
  inline void clear_player_corpse();
  static const int kPlayerCorpseFieldNumber = 43;
  inline bool player_corpse() const;
  inline void set_player_corpse(bool value);

  // optional .tibia.protobuf.appearances.AppearanceFlagCyclopedia cyclopediaitem = 44;
  inline bool has_cyclopediaitem() const;
  inline void clear_cyclopediaitem();
  static const int kCyclopediaitemFieldNumber = 44;
  inline const ::tibia::protobuf::appearances::AppearanceFlagCyclopedia& cyclopediaitem() const;
  inline ::tibia::protobuf::appearances::AppearanceFlagCyclopedia* mutable_cyclopediaitem();
  inline ::tibia::protobuf::appearances::AppearanceFlagCyclopedia* release_cyclopediaitem();
  inline void set_allocated_cyclopediaitem(::tibia::protobuf::appearances::AppearanceFlagCyclopedia* cyclopediaitem);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlags)
 private:
  inline void set_has_bank();
  inline void clear_has_bank();
  inline void set_has_clip();
  inline void clear_has_clip();
  inline void set_has_bottom();
  inline void clear_has_bottom();
  inline void set_has_top();
  inline void clear_has_top();
  inline void set_has_container();
  inline void clear_has_container();
  inline void set_has_cumulative();
  inline void clear_has_cumulative();
  inline void set_has_usable();
  inline void clear_has_usable();
  inline void set_has_forceuse();
  inline void clear_has_forceuse();
  inline void set_has_multiuse();
  inline void clear_has_multiuse();
  inline void set_has_write();
  inline void clear_has_write();
  inline void set_has_write_once();
  inline void clear_has_write_once();
  inline void set_has_liquidpool();
  inline void clear_has_liquidpool();
  inline void set_has_unpass();
  inline void clear_has_unpass();
  inline void set_has_unmove();
  inline void clear_has_unmove();
  inline void set_has_unsight();
  inline void clear_has_unsight();
  inline void set_has_avoid();
  inline void clear_has_avoid();
  inline void set_has_no_movement_animation();
  inline void clear_has_no_movement_animation();
  inline void set_has_take();
  inline void clear_has_take();
  inline void set_has_liquidcontainer();
  inline void clear_has_liquidcontainer();
  inline void set_has_hang();
  inline void clear_has_hang();
  inline void set_has_hook();
  inline void clear_has_hook();
  inline void set_has_rotate();
  inline void clear_has_rotate();
  inline void set_has_light();
  inline void clear_has_light();
  inline void set_has_dont_hide();
  inline void clear_has_dont_hide();
  inline void set_has_translucent();
  inline void clear_has_translucent();
  inline void set_has_shift();
  inline void clear_has_shift();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_lying_object();
  inline void clear_has_lying_object();
  inline void set_has_animate_always();
  inline void clear_has_animate_always();
  inline void set_has_automap();
  inline void clear_has_automap();
  inline void set_has_lenshelp();
  inline void clear_has_lenshelp();
  inline void set_has_fullbank();
  inline void clear_has_fullbank();
  inline void set_has_ignore_look();
  inline void clear_has_ignore_look();
  inline void set_has_clothes();
  inline void clear_has_clothes();
  inline void set_has_default_action();
  inline void clear_has_default_action();
  inline void set_has_market();
  inline void clear_has_market();
  inline void set_has_wrap();
  inline void clear_has_wrap();
  inline void set_has_unwrap();
  inline void clear_has_unwrap();
  inline void set_has_topeffect();
  inline void clear_has_topeffect();
  inline void set_has_changedtoexpire();
  inline void clear_has_changedtoexpire();
  inline void set_has_corpse();
  inline void clear_has_corpse();
  inline void set_has_player_corpse();
  inline void clear_has_player_corpse();
  inline void set_has_cyclopediaitem();
  inline void clear_has_cyclopediaitem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::tibia::protobuf::appearances::AppearanceFlagBank* bank_;
  bool clip_;
  bool bottom_;
  bool top_;
  bool container_;
  bool cumulative_;
  bool usable_;
  bool forceuse_;
  bool multiuse_;
  ::tibia::protobuf::appearances::AppearanceFlagWrite* write_;
  ::tibia::protobuf::appearances::AppearanceFlagWriteOnce* write_once_;
  bool liquidpool_;
  bool unpass_;
  bool unmove_;
  bool unsight_;
  bool avoid_;
  bool no_movement_animation_;
  bool take_;
  bool liquidcontainer_;
  ::tibia::protobuf::appearances::AppearanceFlagHook* hook_;
  ::tibia::protobuf::appearances::AppearanceFlagLight* light_;
  ::tibia::protobuf::appearances::AppearanceFlagShift* shift_;
  bool hang_;
  bool rotate_;
  bool dont_hide_;
  bool translucent_;
  bool lying_object_;
  bool animate_always_;
  bool fullbank_;
  bool ignore_look_;
  ::tibia::protobuf::appearances::AppearanceFlagHeight* height_;
  ::tibia::protobuf::appearances::AppearanceFlagAutomap* automap_;
  ::tibia::protobuf::appearances::AppearanceFlagLenshelp* lenshelp_;
  ::tibia::protobuf::appearances::AppearanceFlagClothes* clothes_;
  ::tibia::protobuf::appearances::AppearanceFlagDefaultAction* default_action_;
  ::tibia::protobuf::appearances::AppearanceFlagMarket* market_;
  bool wrap_;
  bool unwrap_;
  bool topeffect_;
  bool corpse_;
  bool player_corpse_;
  ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::AppearanceFlagNPC > npcsaledata_;
  ::tibia::protobuf::appearances::AppearanceFlagChangedToExpire* changedtoexpire_;
  ::tibia::protobuf::appearances::AppearanceFlagCyclopedia* cyclopediaitem_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlags* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagBank : public ::google::protobuf::Message {
 public:
  AppearanceFlagBank();
  virtual ~AppearanceFlagBank();

  AppearanceFlagBank(const AppearanceFlagBank& from);

  inline AppearanceFlagBank& operator=(const AppearanceFlagBank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagBank& default_instance();

  void Swap(AppearanceFlagBank* other);

  // implements Message ----------------------------------------------

  AppearanceFlagBank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagBank& from);
  void MergeFrom(const AppearanceFlagBank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 waypoints = 1;
  inline bool has_waypoints() const;
  inline void clear_waypoints();
  static const int kWaypointsFieldNumber = 1;
  inline ::google::protobuf::uint32 waypoints() const;
  inline void set_waypoints(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagBank)
 private:
  inline void set_has_waypoints();
  inline void clear_has_waypoints();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 waypoints_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagBank* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagWrite : public ::google::protobuf::Message {
 public:
  AppearanceFlagWrite();
  virtual ~AppearanceFlagWrite();

  AppearanceFlagWrite(const AppearanceFlagWrite& from);

  inline AppearanceFlagWrite& operator=(const AppearanceFlagWrite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagWrite& default_instance();

  void Swap(AppearanceFlagWrite* other);

  // implements Message ----------------------------------------------

  AppearanceFlagWrite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagWrite& from);
  void MergeFrom(const AppearanceFlagWrite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 max_text_length = 1;
  inline bool has_max_text_length() const;
  inline void clear_max_text_length();
  static const int kMaxTextLengthFieldNumber = 1;
  inline ::google::protobuf::uint32 max_text_length() const;
  inline void set_max_text_length(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagWrite)
 private:
  inline void set_has_max_text_length();
  inline void clear_has_max_text_length();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 max_text_length_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagWrite* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagWriteOnce : public ::google::protobuf::Message {
 public:
  AppearanceFlagWriteOnce();
  virtual ~AppearanceFlagWriteOnce();

  AppearanceFlagWriteOnce(const AppearanceFlagWriteOnce& from);

  inline AppearanceFlagWriteOnce& operator=(const AppearanceFlagWriteOnce& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagWriteOnce& default_instance();

  void Swap(AppearanceFlagWriteOnce* other);

  // implements Message ----------------------------------------------

  AppearanceFlagWriteOnce* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagWriteOnce& from);
  void MergeFrom(const AppearanceFlagWriteOnce& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 max_text_length_once = 1;
  inline bool has_max_text_length_once() const;
  inline void clear_max_text_length_once();
  static const int kMaxTextLengthOnceFieldNumber = 1;
  inline ::google::protobuf::uint32 max_text_length_once() const;
  inline void set_max_text_length_once(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagWriteOnce)
 private:
  inline void set_has_max_text_length_once();
  inline void clear_has_max_text_length_once();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 max_text_length_once_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagWriteOnce* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagLight : public ::google::protobuf::Message {
 public:
  AppearanceFlagLight();
  virtual ~AppearanceFlagLight();

  AppearanceFlagLight(const AppearanceFlagLight& from);

  inline AppearanceFlagLight& operator=(const AppearanceFlagLight& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagLight& default_instance();

  void Swap(AppearanceFlagLight* other);

  // implements Message ----------------------------------------------

  AppearanceFlagLight* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagLight& from);
  void MergeFrom(const AppearanceFlagLight& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 brightness = 1;
  inline bool has_brightness() const;
  inline void clear_brightness();
  static const int kBrightnessFieldNumber = 1;
  inline ::google::protobuf::uint32 brightness() const;
  inline void set_brightness(::google::protobuf::uint32 value);

  // optional uint32 color = 2;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 2;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagLight)
 private:
  inline void set_has_brightness();
  inline void clear_has_brightness();
  inline void set_has_color();
  inline void clear_has_color();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 brightness_;
  ::google::protobuf::uint32 color_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagLight* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagHeight : public ::google::protobuf::Message {
 public:
  AppearanceFlagHeight();
  virtual ~AppearanceFlagHeight();

  AppearanceFlagHeight(const AppearanceFlagHeight& from);

  inline AppearanceFlagHeight& operator=(const AppearanceFlagHeight& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagHeight& default_instance();

  void Swap(AppearanceFlagHeight* other);

  // implements Message ----------------------------------------------

  AppearanceFlagHeight* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagHeight& from);
  void MergeFrom(const AppearanceFlagHeight& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 elevation = 1;
  inline bool has_elevation() const;
  inline void clear_elevation();
  static const int kElevationFieldNumber = 1;
  inline ::google::protobuf::uint32 elevation() const;
  inline void set_elevation(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagHeight)
 private:
  inline void set_has_elevation();
  inline void clear_has_elevation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 elevation_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagHeight* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagShift : public ::google::protobuf::Message {
 public:
  AppearanceFlagShift();
  virtual ~AppearanceFlagShift();

  AppearanceFlagShift(const AppearanceFlagShift& from);

  inline AppearanceFlagShift& operator=(const AppearanceFlagShift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagShift& default_instance();

  void Swap(AppearanceFlagShift* other);

  // implements Message ----------------------------------------------

  AppearanceFlagShift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagShift& from);
  void MergeFrom(const AppearanceFlagShift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagShift)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagShift* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagClothes : public ::google::protobuf::Message {
 public:
  AppearanceFlagClothes();
  virtual ~AppearanceFlagClothes();

  AppearanceFlagClothes(const AppearanceFlagClothes& from);

  inline AppearanceFlagClothes& operator=(const AppearanceFlagClothes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagClothes& default_instance();

  void Swap(AppearanceFlagClothes* other);

  // implements Message ----------------------------------------------

  AppearanceFlagClothes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagClothes& from);
  void MergeFrom(const AppearanceFlagClothes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::uint32 slot() const;
  inline void set_slot(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagClothes)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 slot_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagClothes* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagDefaultAction : public ::google::protobuf::Message {
 public:
  AppearanceFlagDefaultAction();
  virtual ~AppearanceFlagDefaultAction();

  AppearanceFlagDefaultAction(const AppearanceFlagDefaultAction& from);

  inline AppearanceFlagDefaultAction& operator=(const AppearanceFlagDefaultAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagDefaultAction& default_instance();

  void Swap(AppearanceFlagDefaultAction* other);

  // implements Message ----------------------------------------------

  AppearanceFlagDefaultAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagDefaultAction& from);
  void MergeFrom(const AppearanceFlagDefaultAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .tibia.protobuf.shared.PLAYER_ACTION action = 1;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 1;
  inline ::tibia::protobuf::shared::PLAYER_ACTION action() const;
  inline void set_action(::tibia::protobuf::shared::PLAYER_ACTION value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagDefaultAction)
 private:
  inline void set_has_action();
  inline void clear_has_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int action_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagDefaultAction* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagMarket : public ::google::protobuf::Message {
 public:
  AppearanceFlagMarket();
  virtual ~AppearanceFlagMarket();

  AppearanceFlagMarket(const AppearanceFlagMarket& from);

  inline AppearanceFlagMarket& operator=(const AppearanceFlagMarket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagMarket& default_instance();

  void Swap(AppearanceFlagMarket* other);

  // implements Message ----------------------------------------------

  AppearanceFlagMarket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagMarket& from);
  void MergeFrom(const AppearanceFlagMarket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .tibia.protobuf.shared.ITEM_CATEGORY category = 1;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 1;
  inline ::tibia::protobuf::shared::ITEM_CATEGORY category() const;
  inline void set_category(::tibia::protobuf::shared::ITEM_CATEGORY value);

  // optional uint32 trade_as_object_id = 2;
  inline bool has_trade_as_object_id() const;
  inline void clear_trade_as_object_id();
  static const int kTradeAsObjectIdFieldNumber = 2;
  inline ::google::protobuf::uint32 trade_as_object_id() const;
  inline void set_trade_as_object_id(::google::protobuf::uint32 value);

  // optional uint32 show_as_object_id = 3;
  inline bool has_show_as_object_id() const;
  inline void clear_show_as_object_id();
  static const int kShowAsObjectIdFieldNumber = 3;
  inline ::google::protobuf::uint32 show_as_object_id() const;
  inline void set_show_as_object_id(::google::protobuf::uint32 value);

  // repeated .tibia.protobuf.shared.PLAYER_PROFESSION restrict_to_profession = 5;
  inline int restrict_to_profession_size() const;
  inline void clear_restrict_to_profession();
  static const int kRestrictToProfessionFieldNumber = 5;
  inline ::tibia::protobuf::shared::PLAYER_PROFESSION restrict_to_profession(int index) const;
  inline void set_restrict_to_profession(int index, ::tibia::protobuf::shared::PLAYER_PROFESSION value);
  inline void add_restrict_to_profession(::tibia::protobuf::shared::PLAYER_PROFESSION value);
  inline const ::google::protobuf::RepeatedField<int>& restrict_to_profession() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_restrict_to_profession();

  // optional uint32 minimum_level = 6;
  inline bool has_minimum_level() const;
  inline void clear_minimum_level();
  static const int kMinimumLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 minimum_level() const;
  inline void set_minimum_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagMarket)
 private:
  inline void set_has_category();
  inline void clear_has_category();
  inline void set_has_trade_as_object_id();
  inline void clear_has_trade_as_object_id();
  inline void set_has_show_as_object_id();
  inline void clear_has_show_as_object_id();
  inline void set_has_minimum_level();
  inline void clear_has_minimum_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int category_;
  ::google::protobuf::uint32 trade_as_object_id_;
  ::google::protobuf::RepeatedField<int> restrict_to_profession_;
  ::google::protobuf::uint32 show_as_object_id_;
  ::google::protobuf::uint32 minimum_level_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagMarket* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagNPC : public ::google::protobuf::Message {
 public:
  AppearanceFlagNPC();
  virtual ~AppearanceFlagNPC();

  AppearanceFlagNPC(const AppearanceFlagNPC& from);

  inline AppearanceFlagNPC& operator=(const AppearanceFlagNPC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagNPC& default_instance();

  void Swap(AppearanceFlagNPC* other);

  // implements Message ----------------------------------------------

  AppearanceFlagNPC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagNPC& from);
  void MergeFrom(const AppearanceFlagNPC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string location = 2;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 2;
  inline const ::std::string& location() const;
  inline void set_location(const ::std::string& value);
  inline void set_location(const char* value);
  inline void set_location(const char* value, size_t size);
  inline ::std::string* mutable_location();
  inline ::std::string* release_location();
  inline void set_allocated_location(::std::string* location);

  // optional uint32 sale_price = 3;
  inline bool has_sale_price() const;
  inline void clear_sale_price();
  static const int kSalePriceFieldNumber = 3;
  inline ::google::protobuf::uint32 sale_price() const;
  inline void set_sale_price(::google::protobuf::uint32 value);

  // optional uint32 buy_price = 4;
  inline bool has_buy_price() const;
  inline void clear_buy_price();
  static const int kBuyPriceFieldNumber = 4;
  inline ::google::protobuf::uint32 buy_price() const;
  inline void set_buy_price(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagNPC)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_sale_price();
  inline void clear_has_sale_price();
  inline void set_has_buy_price();
  inline void clear_has_buy_price();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* location_;
  ::google::protobuf::uint32 sale_price_;
  ::google::protobuf::uint32 buy_price_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagNPC* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagAutomap : public ::google::protobuf::Message {
 public:
  AppearanceFlagAutomap();
  virtual ~AppearanceFlagAutomap();

  AppearanceFlagAutomap(const AppearanceFlagAutomap& from);

  inline AppearanceFlagAutomap& operator=(const AppearanceFlagAutomap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagAutomap& default_instance();

  void Swap(AppearanceFlagAutomap* other);

  // implements Message ----------------------------------------------

  AppearanceFlagAutomap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagAutomap& from);
  void MergeFrom(const AppearanceFlagAutomap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 color = 1;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 1;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagAutomap)
 private:
  inline void set_has_color();
  inline void clear_has_color();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 color_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagAutomap* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagHook : public ::google::protobuf::Message {
 public:
  AppearanceFlagHook();
  virtual ~AppearanceFlagHook();

  AppearanceFlagHook(const AppearanceFlagHook& from);

  inline AppearanceFlagHook& operator=(const AppearanceFlagHook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagHook& default_instance();

  void Swap(AppearanceFlagHook* other);

  // implements Message ----------------------------------------------

  AppearanceFlagHook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagHook& from);
  void MergeFrom(const AppearanceFlagHook& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .tibia.protobuf.shared.HOOK_TYPE direction = 1;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 1;
  inline ::tibia::protobuf::shared::HOOK_TYPE direction() const;
  inline void set_direction(::tibia::protobuf::shared::HOOK_TYPE value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagHook)
 private:
  inline void set_has_direction();
  inline void clear_has_direction();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int direction_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagHook* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagLenshelp : public ::google::protobuf::Message {
 public:
  AppearanceFlagLenshelp();
  virtual ~AppearanceFlagLenshelp();

  AppearanceFlagLenshelp(const AppearanceFlagLenshelp& from);

  inline AppearanceFlagLenshelp& operator=(const AppearanceFlagLenshelp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagLenshelp& default_instance();

  void Swap(AppearanceFlagLenshelp* other);

  // implements Message ----------------------------------------------

  AppearanceFlagLenshelp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagLenshelp& from);
  void MergeFrom(const AppearanceFlagLenshelp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagLenshelp)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagLenshelp* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagChangedToExpire : public ::google::protobuf::Message {
 public:
  AppearanceFlagChangedToExpire();
  virtual ~AppearanceFlagChangedToExpire();

  AppearanceFlagChangedToExpire(const AppearanceFlagChangedToExpire& from);

  inline AppearanceFlagChangedToExpire& operator=(const AppearanceFlagChangedToExpire& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagChangedToExpire& default_instance();

  void Swap(AppearanceFlagChangedToExpire* other);

  // implements Message ----------------------------------------------

  AppearanceFlagChangedToExpire* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagChangedToExpire& from);
  void MergeFrom(const AppearanceFlagChangedToExpire& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 former_object_typeid = 1;
  inline bool has_former_object_typeid() const;
  inline void clear_former_object_typeid();
  static const int kFormerObjectTypeidFieldNumber = 1;
  inline ::google::protobuf::uint32 former_object_typeid() const;
  inline void set_former_object_typeid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagChangedToExpire)
 private:
  inline void set_has_former_object_typeid();
  inline void clear_has_former_object_typeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 former_object_typeid_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagChangedToExpire* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceFlagCyclopedia : public ::google::protobuf::Message {
 public:
  AppearanceFlagCyclopedia();
  virtual ~AppearanceFlagCyclopedia();

  AppearanceFlagCyclopedia(const AppearanceFlagCyclopedia& from);

  inline AppearanceFlagCyclopedia& operator=(const AppearanceFlagCyclopedia& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceFlagCyclopedia& default_instance();

  void Swap(AppearanceFlagCyclopedia* other);

  // implements Message ----------------------------------------------

  AppearanceFlagCyclopedia* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceFlagCyclopedia& from);
  void MergeFrom(const AppearanceFlagCyclopedia& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cyclopedia_type = 1;
  inline bool has_cyclopedia_type() const;
  inline void clear_cyclopedia_type();
  static const int kCyclopediaTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 cyclopedia_type() const;
  inline void set_cyclopedia_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.AppearanceFlagCyclopedia)
 private:
  inline void set_has_cyclopedia_type();
  inline void clear_has_cyclopedia_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cyclopedia_type_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static AppearanceFlagCyclopedia* default_instance_;
};
// -------------------------------------------------------------------

class SpecialMeaningAppearanceIds : public ::google::protobuf::Message {
 public:
  SpecialMeaningAppearanceIds();
  virtual ~SpecialMeaningAppearanceIds();

  SpecialMeaningAppearanceIds(const SpecialMeaningAppearanceIds& from);

  inline SpecialMeaningAppearanceIds& operator=(const SpecialMeaningAppearanceIds& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpecialMeaningAppearanceIds& default_instance();

  void Swap(SpecialMeaningAppearanceIds* other);

  // implements Message ----------------------------------------------

  SpecialMeaningAppearanceIds* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpecialMeaningAppearanceIds& from);
  void MergeFrom(const SpecialMeaningAppearanceIds& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gold_coin_id = 1;
  inline bool has_gold_coin_id() const;
  inline void clear_gold_coin_id();
  static const int kGoldCoinIdFieldNumber = 1;
  inline ::google::protobuf::uint32 gold_coin_id() const;
  inline void set_gold_coin_id(::google::protobuf::uint32 value);

  // optional uint32 platinum_coin_id = 2;
  inline bool has_platinum_coin_id() const;
  inline void clear_platinum_coin_id();
  static const int kPlatinumCoinIdFieldNumber = 2;
  inline ::google::protobuf::uint32 platinum_coin_id() const;
  inline void set_platinum_coin_id(::google::protobuf::uint32 value);

  // optional uint32 crystal_coin_id = 3;
  inline bool has_crystal_coin_id() const;
  inline void clear_crystal_coin_id();
  static const int kCrystalCoinIdFieldNumber = 3;
  inline ::google::protobuf::uint32 crystal_coin_id() const;
  inline void set_crystal_coin_id(::google::protobuf::uint32 value);

  // optional uint32 tibia_coin_id = 4;
  inline bool has_tibia_coin_id() const;
  inline void clear_tibia_coin_id();
  static const int kTibiaCoinIdFieldNumber = 4;
  inline ::google::protobuf::uint32 tibia_coin_id() const;
  inline void set_tibia_coin_id(::google::protobuf::uint32 value);

  // optional uint32 stamped_letter_id = 5;
  inline bool has_stamped_letter_id() const;
  inline void clear_stamped_letter_id();
  static const int kStampedLetterIdFieldNumber = 5;
  inline ::google::protobuf::uint32 stamped_letter_id() const;
  inline void set_stamped_letter_id(::google::protobuf::uint32 value);

  // optional uint32 supply_stash_id = 6;
  inline bool has_supply_stash_id() const;
  inline void clear_supply_stash_id();
  static const int kSupplyStashIdFieldNumber = 6;
  inline ::google::protobuf::uint32 supply_stash_id() const;
  inline void set_supply_stash_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tibia.protobuf.appearances.SpecialMeaningAppearanceIds)
 private:
  inline void set_has_gold_coin_id();
  inline void clear_has_gold_coin_id();
  inline void set_has_platinum_coin_id();
  inline void clear_has_platinum_coin_id();
  inline void set_has_crystal_coin_id();
  inline void clear_has_crystal_coin_id();
  inline void set_has_tibia_coin_id();
  inline void clear_has_tibia_coin_id();
  inline void set_has_stamped_letter_id();
  inline void clear_has_stamped_letter_id();
  inline void set_has_supply_stash_id();
  inline void clear_has_supply_stash_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gold_coin_id_;
  ::google::protobuf::uint32 platinum_coin_id_;
  ::google::protobuf::uint32 crystal_coin_id_;
  ::google::protobuf::uint32 tibia_coin_id_;
  ::google::protobuf::uint32 stamped_letter_id_;
  ::google::protobuf::uint32 supply_stash_id_;
  friend void  protobuf_AddDesc_appearances_2eproto();
  friend void protobuf_AssignDesc_appearances_2eproto();
  friend void protobuf_ShutdownFile_appearances_2eproto();

  void InitAsDefaultInstance();
  static SpecialMeaningAppearanceIds* default_instance_;
};
// ===================================================================


// ===================================================================

// Appearances

// repeated .tibia.protobuf.appearances.Appearance object = 1;
inline int Appearances::object_size() const {
  return object_.size();
}
inline void Appearances::clear_object() {
  object_.Clear();
}
inline const ::tibia::protobuf::appearances::Appearance& Appearances::object(int index) const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.Appearances.object)
  return object_.Get(index);
}
inline ::tibia::protobuf::appearances::Appearance* Appearances::mutable_object(int index) {
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.Appearances.object)
  return object_.Mutable(index);
}
inline ::tibia::protobuf::appearances::Appearance* Appearances::add_object() {
  // @@protoc_insertion_point(field_add:tibia.protobuf.appearances.Appearances.object)
  return object_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >&
Appearances::object() const {
  // @@protoc_insertion_point(field_list:tibia.protobuf.appearances.Appearances.object)
  return object_;
}
inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >*
Appearances::mutable_object() {
  // @@protoc_insertion_point(field_mutable_list:tibia.protobuf.appearances.Appearances.object)
  return &object_;
}

// repeated .tibia.protobuf.appearances.Appearance outfit = 2;
inline int Appearances::outfit_size() const {
  return outfit_.size();
}
inline void Appearances::clear_outfit() {
  outfit_.Clear();
}
inline const ::tibia::protobuf::appearances::Appearance& Appearances::outfit(int index) const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.Appearances.outfit)
  return outfit_.Get(index);
}
inline ::tibia::protobuf::appearances::Appearance* Appearances::mutable_outfit(int index) {
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.Appearances.outfit)
  return outfit_.Mutable(index);
}
inline ::tibia::protobuf::appearances::Appearance* Appearances::add_outfit() {
  // @@protoc_insertion_point(field_add:tibia.protobuf.appearances.Appearances.outfit)
  return outfit_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >&
Appearances::outfit() const {
  // @@protoc_insertion_point(field_list:tibia.protobuf.appearances.Appearances.outfit)
  return outfit_;
}
inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >*
Appearances::mutable_outfit() {
  // @@protoc_insertion_point(field_mutable_list:tibia.protobuf.appearances.Appearances.outfit)
  return &outfit_;
}

// repeated .tibia.protobuf.appearances.Appearance effect = 3;
inline int Appearances::effect_size() const {
  return effect_.size();
}
inline void Appearances::clear_effect() {
  effect_.Clear();
}
inline const ::tibia::protobuf::appearances::Appearance& Appearances::effect(int index) const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.Appearances.effect)
  return effect_.Get(index);
}
inline ::tibia::protobuf::appearances::Appearance* Appearances::mutable_effect(int index) {
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.Appearances.effect)
  return effect_.Mutable(index);
}
inline ::tibia::protobuf::appearances::Appearance* Appearances::add_effect() {
  // @@protoc_insertion_point(field_add:tibia.protobuf.appearances.Appearances.effect)
  return effect_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >&
Appearances::effect() const {
  // @@protoc_insertion_point(field_list:tibia.protobuf.appearances.Appearances.effect)
  return effect_;
}
inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >*
Appearances::mutable_effect() {
  // @@protoc_insertion_point(field_mutable_list:tibia.protobuf.appearances.Appearances.effect)
  return &effect_;
}

// repeated .tibia.protobuf.appearances.Appearance missile = 4;
inline int Appearances::missile_size() const {
  return missile_.size();
}
inline void Appearances::clear_missile() {
  missile_.Clear();
}
inline const ::tibia::protobuf::appearances::Appearance& Appearances::missile(int index) const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.Appearances.missile)
  return missile_.Get(index);
}
inline ::tibia::protobuf::appearances::Appearance* Appearances::mutable_missile(int index) {
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.Appearances.missile)
  return missile_.Mutable(index);
}
inline ::tibia::protobuf::appearances::Appearance* Appearances::add_missile() {
  // @@protoc_insertion_point(field_add:tibia.protobuf.appearances.Appearances.missile)
  return missile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >&
Appearances::missile() const {
  // @@protoc_insertion_point(field_list:tibia.protobuf.appearances.Appearances.missile)
  return missile_;
}
inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Appearance >*
Appearances::mutable_missile() {
  // @@protoc_insertion_point(field_mutable_list:tibia.protobuf.appearances.Appearances.missile)
  return &missile_;
}

// optional .tibia.protobuf.appearances.SpecialMeaningAppearanceIds special_meaning_appearance_ids = 5;
inline bool Appearances::has_special_meaning_appearance_ids() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Appearances::set_has_special_meaning_appearance_ids() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Appearances::clear_has_special_meaning_appearance_ids() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Appearances::clear_special_meaning_appearance_ids() {
  if (special_meaning_appearance_ids_ != NULL) special_meaning_appearance_ids_->::tibia::protobuf::appearances::SpecialMeaningAppearanceIds::Clear();
  clear_has_special_meaning_appearance_ids();
}
inline const ::tibia::protobuf::appearances::SpecialMeaningAppearanceIds& Appearances::special_meaning_appearance_ids() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.Appearances.special_meaning_appearance_ids)
  return special_meaning_appearance_ids_ != NULL ? *special_meaning_appearance_ids_ : *default_instance_->special_meaning_appearance_ids_;
}
inline ::tibia::protobuf::appearances::SpecialMeaningAppearanceIds* Appearances::mutable_special_meaning_appearance_ids() {
  set_has_special_meaning_appearance_ids();
  if (special_meaning_appearance_ids_ == NULL) special_meaning_appearance_ids_ = new ::tibia::protobuf::appearances::SpecialMeaningAppearanceIds;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.Appearances.special_meaning_appearance_ids)
  return special_meaning_appearance_ids_;
}
inline ::tibia::protobuf::appearances::SpecialMeaningAppearanceIds* Appearances::release_special_meaning_appearance_ids() {
  clear_has_special_meaning_appearance_ids();
  ::tibia::protobuf::appearances::SpecialMeaningAppearanceIds* temp = special_meaning_appearance_ids_;
  special_meaning_appearance_ids_ = NULL;
  return temp;
}
inline void Appearances::set_allocated_special_meaning_appearance_ids(::tibia::protobuf::appearances::SpecialMeaningAppearanceIds* special_meaning_appearance_ids) {
  delete special_meaning_appearance_ids_;
  special_meaning_appearance_ids_ = special_meaning_appearance_ids;
  if (special_meaning_appearance_ids) {
    set_has_special_meaning_appearance_ids();
  } else {
    clear_has_special_meaning_appearance_ids();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.Appearances.special_meaning_appearance_ids)
}

// -------------------------------------------------------------------

// SpritePhase

// optional uint32 duration_min = 1;
inline bool SpritePhase::has_duration_min() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpritePhase::set_has_duration_min() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpritePhase::clear_has_duration_min() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpritePhase::clear_duration_min() {
  duration_min_ = 0u;
  clear_has_duration_min();
}
inline ::google::protobuf::uint32 SpritePhase::duration_min() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpritePhase.duration_min)
  return duration_min_;
}
inline void SpritePhase::set_duration_min(::google::protobuf::uint32 value) {
  set_has_duration_min();
  duration_min_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpritePhase.duration_min)
}

// optional uint32 duration_max = 2;
inline bool SpritePhase::has_duration_max() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpritePhase::set_has_duration_max() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpritePhase::clear_has_duration_max() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpritePhase::clear_duration_max() {
  duration_max_ = 0u;
  clear_has_duration_max();
}
inline ::google::protobuf::uint32 SpritePhase::duration_max() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpritePhase.duration_max)
  return duration_max_;
}
inline void SpritePhase::set_duration_max(::google::protobuf::uint32 value) {
  set_has_duration_max();
  duration_max_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpritePhase.duration_max)
}

// -------------------------------------------------------------------

// SpriteAnimation

// optional uint32 default_start_phase = 1;
inline bool SpriteAnimation::has_default_start_phase() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpriteAnimation::set_has_default_start_phase() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpriteAnimation::clear_has_default_start_phase() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpriteAnimation::clear_default_start_phase() {
  default_start_phase_ = 0u;
  clear_has_default_start_phase();
}
inline ::google::protobuf::uint32 SpriteAnimation::default_start_phase() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteAnimation.default_start_phase)
  return default_start_phase_;
}
inline void SpriteAnimation::set_default_start_phase(::google::protobuf::uint32 value) {
  set_has_default_start_phase();
  default_start_phase_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpriteAnimation.default_start_phase)
}

// optional bool synchronized = 2;
inline bool SpriteAnimation::has_synchronized() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpriteAnimation::set_has_synchronized() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpriteAnimation::clear_has_synchronized() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpriteAnimation::clear_synchronized() {
  synchronized_ = false;
  clear_has_synchronized();
}
inline bool SpriteAnimation::synchronized() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteAnimation.synchronized)
  return synchronized_;
}
inline void SpriteAnimation::set_synchronized(bool value) {
  set_has_synchronized();
  synchronized_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpriteAnimation.synchronized)
}

// optional bool random_start_phase = 3;
inline bool SpriteAnimation::has_random_start_phase() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpriteAnimation::set_has_random_start_phase() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpriteAnimation::clear_has_random_start_phase() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpriteAnimation::clear_random_start_phase() {
  random_start_phase_ = false;
  clear_has_random_start_phase();
}
inline bool SpriteAnimation::random_start_phase() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteAnimation.random_start_phase)
  return random_start_phase_;
}
inline void SpriteAnimation::set_random_start_phase(bool value) {
  set_has_random_start_phase();
  random_start_phase_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpriteAnimation.random_start_phase)
}

// optional .tibia.protobuf.shared.ANIMATION_LOOP_TYPE loop_type = 4;
inline bool SpriteAnimation::has_loop_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SpriteAnimation::set_has_loop_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SpriteAnimation::clear_has_loop_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SpriteAnimation::clear_loop_type() {
  loop_type_ = -1;
  clear_has_loop_type();
}
inline ::tibia::protobuf::shared::ANIMATION_LOOP_TYPE SpriteAnimation::loop_type() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteAnimation.loop_type)
  return static_cast< ::tibia::protobuf::shared::ANIMATION_LOOP_TYPE >(loop_type_);
}
inline void SpriteAnimation::set_loop_type(::tibia::protobuf::shared::ANIMATION_LOOP_TYPE value) {
  assert(::tibia::protobuf::shared::ANIMATION_LOOP_TYPE_IsValid(value));
  set_has_loop_type();
  loop_type_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpriteAnimation.loop_type)
}

// optional uint32 loop_count = 5;
inline bool SpriteAnimation::has_loop_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SpriteAnimation::set_has_loop_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SpriteAnimation::clear_has_loop_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SpriteAnimation::clear_loop_count() {
  loop_count_ = 0u;
  clear_has_loop_count();
}
inline ::google::protobuf::uint32 SpriteAnimation::loop_count() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteAnimation.loop_count)
  return loop_count_;
}
inline void SpriteAnimation::set_loop_count(::google::protobuf::uint32 value) {
  set_has_loop_count();
  loop_count_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpriteAnimation.loop_count)
}

// repeated .tibia.protobuf.appearances.SpritePhase sprite_phase = 6;
inline int SpriteAnimation::sprite_phase_size() const {
  return sprite_phase_.size();
}
inline void SpriteAnimation::clear_sprite_phase() {
  sprite_phase_.Clear();
}
inline const ::tibia::protobuf::appearances::SpritePhase& SpriteAnimation::sprite_phase(int index) const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteAnimation.sprite_phase)
  return sprite_phase_.Get(index);
}
inline ::tibia::protobuf::appearances::SpritePhase* SpriteAnimation::mutable_sprite_phase(int index) {
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.SpriteAnimation.sprite_phase)
  return sprite_phase_.Mutable(index);
}
inline ::tibia::protobuf::appearances::SpritePhase* SpriteAnimation::add_sprite_phase() {
  // @@protoc_insertion_point(field_add:tibia.protobuf.appearances.SpriteAnimation.sprite_phase)
  return sprite_phase_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::SpritePhase >&
SpriteAnimation::sprite_phase() const {
  // @@protoc_insertion_point(field_list:tibia.protobuf.appearances.SpriteAnimation.sprite_phase)
  return sprite_phase_;
}
inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::SpritePhase >*
SpriteAnimation::mutable_sprite_phase() {
  // @@protoc_insertion_point(field_mutable_list:tibia.protobuf.appearances.SpriteAnimation.sprite_phase)
  return &sprite_phase_;
}

// -------------------------------------------------------------------

// Box

// optional uint32 x = 1;
inline bool Box::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Box::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Box::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Box::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 Box::x() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.Box.x)
  return x_;
}
inline void Box::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.Box.x)
}

// optional uint32 y = 2;
inline bool Box::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Box::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Box::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Box::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 Box::y() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.Box.y)
  return y_;
}
inline void Box::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.Box.y)
}

// optional uint32 width = 3;
inline bool Box::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Box::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Box::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Box::clear_width() {
  width_ = 0u;
  clear_has_width();
}
inline ::google::protobuf::uint32 Box::width() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.Box.width)
  return width_;
}
inline void Box::set_width(::google::protobuf::uint32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.Box.width)
}

// optional uint32 height = 4;
inline bool Box::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Box::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Box::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Box::clear_height() {
  height_ = 0u;
  clear_has_height();
}
inline ::google::protobuf::uint32 Box::height() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.Box.height)
  return height_;
}
inline void Box::set_height(::google::protobuf::uint32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.Box.height)
}

// -------------------------------------------------------------------

// SpriteInfo

// optional uint32 pattern_width = 1;
inline bool SpriteInfo::has_pattern_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpriteInfo::set_has_pattern_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpriteInfo::clear_has_pattern_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpriteInfo::clear_pattern_width() {
  pattern_width_ = 0u;
  clear_has_pattern_width();
}
inline ::google::protobuf::uint32 SpriteInfo::pattern_width() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteInfo.pattern_width)
  return pattern_width_;
}
inline void SpriteInfo::set_pattern_width(::google::protobuf::uint32 value) {
  set_has_pattern_width();
  pattern_width_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpriteInfo.pattern_width)
}

// optional uint32 pattern_height = 2;
inline bool SpriteInfo::has_pattern_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpriteInfo::set_has_pattern_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpriteInfo::clear_has_pattern_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpriteInfo::clear_pattern_height() {
  pattern_height_ = 0u;
  clear_has_pattern_height();
}
inline ::google::protobuf::uint32 SpriteInfo::pattern_height() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteInfo.pattern_height)
  return pattern_height_;
}
inline void SpriteInfo::set_pattern_height(::google::protobuf::uint32 value) {
  set_has_pattern_height();
  pattern_height_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpriteInfo.pattern_height)
}

// optional uint32 pattern_depth = 3;
inline bool SpriteInfo::has_pattern_depth() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpriteInfo::set_has_pattern_depth() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpriteInfo::clear_has_pattern_depth() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpriteInfo::clear_pattern_depth() {
  pattern_depth_ = 0u;
  clear_has_pattern_depth();
}
inline ::google::protobuf::uint32 SpriteInfo::pattern_depth() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteInfo.pattern_depth)
  return pattern_depth_;
}
inline void SpriteInfo::set_pattern_depth(::google::protobuf::uint32 value) {
  set_has_pattern_depth();
  pattern_depth_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpriteInfo.pattern_depth)
}

// optional uint32 layers = 4;
inline bool SpriteInfo::has_layers() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SpriteInfo::set_has_layers() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SpriteInfo::clear_has_layers() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SpriteInfo::clear_layers() {
  layers_ = 0u;
  clear_has_layers();
}
inline ::google::protobuf::uint32 SpriteInfo::layers() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteInfo.layers)
  return layers_;
}
inline void SpriteInfo::set_layers(::google::protobuf::uint32 value) {
  set_has_layers();
  layers_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpriteInfo.layers)
}

// repeated uint32 sprite_id = 5;
inline int SpriteInfo::sprite_id_size() const {
  return sprite_id_.size();
}
inline void SpriteInfo::clear_sprite_id() {
  sprite_id_.Clear();
}
inline ::google::protobuf::uint32 SpriteInfo::sprite_id(int index) const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteInfo.sprite_id)
  return sprite_id_.Get(index);
}
inline void SpriteInfo::set_sprite_id(int index, ::google::protobuf::uint32 value) {
  sprite_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpriteInfo.sprite_id)
}
inline void SpriteInfo::add_sprite_id(::google::protobuf::uint32 value) {
  sprite_id_.Add(value);
  // @@protoc_insertion_point(field_add:tibia.protobuf.appearances.SpriteInfo.sprite_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SpriteInfo::sprite_id() const {
  // @@protoc_insertion_point(field_list:tibia.protobuf.appearances.SpriteInfo.sprite_id)
  return sprite_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SpriteInfo::mutable_sprite_id() {
  // @@protoc_insertion_point(field_mutable_list:tibia.protobuf.appearances.SpriteInfo.sprite_id)
  return &sprite_id_;
}

// optional uint32 bounding_square = 7;
inline bool SpriteInfo::has_bounding_square() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SpriteInfo::set_has_bounding_square() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SpriteInfo::clear_has_bounding_square() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SpriteInfo::clear_bounding_square() {
  bounding_square_ = 0u;
  clear_has_bounding_square();
}
inline ::google::protobuf::uint32 SpriteInfo::bounding_square() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteInfo.bounding_square)
  return bounding_square_;
}
inline void SpriteInfo::set_bounding_square(::google::protobuf::uint32 value) {
  set_has_bounding_square();
  bounding_square_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpriteInfo.bounding_square)
}

// optional .tibia.protobuf.appearances.SpriteAnimation animation = 6;
inline bool SpriteInfo::has_animation() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SpriteInfo::set_has_animation() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SpriteInfo::clear_has_animation() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SpriteInfo::clear_animation() {
  if (animation_ != NULL) animation_->::tibia::protobuf::appearances::SpriteAnimation::Clear();
  clear_has_animation();
}
inline const ::tibia::protobuf::appearances::SpriteAnimation& SpriteInfo::animation() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteInfo.animation)
  return animation_ != NULL ? *animation_ : *default_instance_->animation_;
}
inline ::tibia::protobuf::appearances::SpriteAnimation* SpriteInfo::mutable_animation() {
  set_has_animation();
  if (animation_ == NULL) animation_ = new ::tibia::protobuf::appearances::SpriteAnimation;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.SpriteInfo.animation)
  return animation_;
}
inline ::tibia::protobuf::appearances::SpriteAnimation* SpriteInfo::release_animation() {
  clear_has_animation();
  ::tibia::protobuf::appearances::SpriteAnimation* temp = animation_;
  animation_ = NULL;
  return temp;
}
inline void SpriteInfo::set_allocated_animation(::tibia::protobuf::appearances::SpriteAnimation* animation) {
  delete animation_;
  animation_ = animation;
  if (animation) {
    set_has_animation();
  } else {
    clear_has_animation();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.SpriteInfo.animation)
}

// optional bool is_opaque = 8;
inline bool SpriteInfo::has_is_opaque() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SpriteInfo::set_has_is_opaque() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SpriteInfo::clear_has_is_opaque() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SpriteInfo::clear_is_opaque() {
  is_opaque_ = false;
  clear_has_is_opaque();
}
inline bool SpriteInfo::is_opaque() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteInfo.is_opaque)
  return is_opaque_;
}
inline void SpriteInfo::set_is_opaque(bool value) {
  set_has_is_opaque();
  is_opaque_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpriteInfo.is_opaque)
}

// repeated .tibia.protobuf.appearances.Box bounding_box_per_direction = 9;
inline int SpriteInfo::bounding_box_per_direction_size() const {
  return bounding_box_per_direction_.size();
}
inline void SpriteInfo::clear_bounding_box_per_direction() {
  bounding_box_per_direction_.Clear();
}
inline const ::tibia::protobuf::appearances::Box& SpriteInfo::bounding_box_per_direction(int index) const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpriteInfo.bounding_box_per_direction)
  return bounding_box_per_direction_.Get(index);
}
inline ::tibia::protobuf::appearances::Box* SpriteInfo::mutable_bounding_box_per_direction(int index) {
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.SpriteInfo.bounding_box_per_direction)
  return bounding_box_per_direction_.Mutable(index);
}
inline ::tibia::protobuf::appearances::Box* SpriteInfo::add_bounding_box_per_direction() {
  // @@protoc_insertion_point(field_add:tibia.protobuf.appearances.SpriteInfo.bounding_box_per_direction)
  return bounding_box_per_direction_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Box >&
SpriteInfo::bounding_box_per_direction() const {
  // @@protoc_insertion_point(field_list:tibia.protobuf.appearances.SpriteInfo.bounding_box_per_direction)
  return bounding_box_per_direction_;
}
inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::Box >*
SpriteInfo::mutable_bounding_box_per_direction() {
  // @@protoc_insertion_point(field_mutable_list:tibia.protobuf.appearances.SpriteInfo.bounding_box_per_direction)
  return &bounding_box_per_direction_;
}

// -------------------------------------------------------------------

// FrameGroup

// optional .tibia.protobuf.appearances.FIXED_FRAME_GROUP fixed_frame_group = 1;
inline bool FrameGroup::has_fixed_frame_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameGroup::set_has_fixed_frame_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameGroup::clear_has_fixed_frame_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameGroup::clear_fixed_frame_group() {
  fixed_frame_group_ = 0;
  clear_has_fixed_frame_group();
}
inline ::tibia::protobuf::appearances::FIXED_FRAME_GROUP FrameGroup::fixed_frame_group() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.FrameGroup.fixed_frame_group)
  return static_cast< ::tibia::protobuf::appearances::FIXED_FRAME_GROUP >(fixed_frame_group_);
}
inline void FrameGroup::set_fixed_frame_group(::tibia::protobuf::appearances::FIXED_FRAME_GROUP value) {
  assert(::tibia::protobuf::appearances::FIXED_FRAME_GROUP_IsValid(value));
  set_has_fixed_frame_group();
  fixed_frame_group_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.FrameGroup.fixed_frame_group)
}

// optional uint32 id = 2;
inline bool FrameGroup::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameGroup::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameGroup::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameGroup::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FrameGroup::id() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.FrameGroup.id)
  return id_;
}
inline void FrameGroup::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.FrameGroup.id)
}

// optional .tibia.protobuf.appearances.SpriteInfo sprite_info = 3;
inline bool FrameGroup::has_sprite_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameGroup::set_has_sprite_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameGroup::clear_has_sprite_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameGroup::clear_sprite_info() {
  if (sprite_info_ != NULL) sprite_info_->::tibia::protobuf::appearances::SpriteInfo::Clear();
  clear_has_sprite_info();
}
inline const ::tibia::protobuf::appearances::SpriteInfo& FrameGroup::sprite_info() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.FrameGroup.sprite_info)
  return sprite_info_ != NULL ? *sprite_info_ : *default_instance_->sprite_info_;
}
inline ::tibia::protobuf::appearances::SpriteInfo* FrameGroup::mutable_sprite_info() {
  set_has_sprite_info();
  if (sprite_info_ == NULL) sprite_info_ = new ::tibia::protobuf::appearances::SpriteInfo;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.FrameGroup.sprite_info)
  return sprite_info_;
}
inline ::tibia::protobuf::appearances::SpriteInfo* FrameGroup::release_sprite_info() {
  clear_has_sprite_info();
  ::tibia::protobuf::appearances::SpriteInfo* temp = sprite_info_;
  sprite_info_ = NULL;
  return temp;
}
inline void FrameGroup::set_allocated_sprite_info(::tibia::protobuf::appearances::SpriteInfo* sprite_info) {
  delete sprite_info_;
  sprite_info_ = sprite_info;
  if (sprite_info) {
    set_has_sprite_info();
  } else {
    clear_has_sprite_info();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.FrameGroup.sprite_info)
}

// -------------------------------------------------------------------

// Appearance

// optional uint32 id = 1;
inline bool Appearance::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Appearance::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Appearance::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Appearance::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Appearance::id() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.Appearance.id)
  return id_;
}
inline void Appearance::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.Appearance.id)
}

// repeated .tibia.protobuf.appearances.FrameGroup frame_group = 2;
inline int Appearance::frame_group_size() const {
  return frame_group_.size();
}
inline void Appearance::clear_frame_group() {
  frame_group_.Clear();
}
inline const ::tibia::protobuf::appearances::FrameGroup& Appearance::frame_group(int index) const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.Appearance.frame_group)
  return frame_group_.Get(index);
}
inline ::tibia::protobuf::appearances::FrameGroup* Appearance::mutable_frame_group(int index) {
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.Appearance.frame_group)
  return frame_group_.Mutable(index);
}
inline ::tibia::protobuf::appearances::FrameGroup* Appearance::add_frame_group() {
  // @@protoc_insertion_point(field_add:tibia.protobuf.appearances.Appearance.frame_group)
  return frame_group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::FrameGroup >&
Appearance::frame_group() const {
  // @@protoc_insertion_point(field_list:tibia.protobuf.appearances.Appearance.frame_group)
  return frame_group_;
}
inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::FrameGroup >*
Appearance::mutable_frame_group() {
  // @@protoc_insertion_point(field_mutable_list:tibia.protobuf.appearances.Appearance.frame_group)
  return &frame_group_;
}

// optional .tibia.protobuf.appearances.AppearanceFlags flags = 3;
inline bool Appearance::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Appearance::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Appearance::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Appearance::clear_flags() {
  if (flags_ != NULL) flags_->::tibia::protobuf::appearances::AppearanceFlags::Clear();
  clear_has_flags();
}
inline const ::tibia::protobuf::appearances::AppearanceFlags& Appearance::flags() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.Appearance.flags)
  return flags_ != NULL ? *flags_ : *default_instance_->flags_;
}
inline ::tibia::protobuf::appearances::AppearanceFlags* Appearance::mutable_flags() {
  set_has_flags();
  if (flags_ == NULL) flags_ = new ::tibia::protobuf::appearances::AppearanceFlags;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.Appearance.flags)
  return flags_;
}
inline ::tibia::protobuf::appearances::AppearanceFlags* Appearance::release_flags() {
  clear_has_flags();
  ::tibia::protobuf::appearances::AppearanceFlags* temp = flags_;
  flags_ = NULL;
  return temp;
}
inline void Appearance::set_allocated_flags(::tibia::protobuf::appearances::AppearanceFlags* flags) {
  delete flags_;
  flags_ = flags;
  if (flags) {
    set_has_flags();
  } else {
    clear_has_flags();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.Appearance.flags)
}

// optional string name = 4;
inline bool Appearance::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Appearance::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Appearance::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Appearance::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Appearance::name() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.Appearance.name)
  return *name_;
}
inline void Appearance::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.Appearance.name)
}
inline void Appearance::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:tibia.protobuf.appearances.Appearance.name)
}
inline void Appearance::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tibia.protobuf.appearances.Appearance.name)
}
inline ::std::string* Appearance::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.Appearance.name)
  return name_;
}
inline ::std::string* Appearance::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Appearance::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.Appearance.name)
}

// -------------------------------------------------------------------

// AppearanceFlags

// optional .tibia.protobuf.appearances.AppearanceFlagBank bank = 1;
inline bool AppearanceFlags::has_bank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlags::set_has_bank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlags::clear_has_bank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlags::clear_bank() {
  if (bank_ != NULL) bank_->::tibia::protobuf::appearances::AppearanceFlagBank::Clear();
  clear_has_bank();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagBank& AppearanceFlags::bank() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.bank)
  return bank_ != NULL ? *bank_ : *default_instance_->bank_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagBank* AppearanceFlags::mutable_bank() {
  set_has_bank();
  if (bank_ == NULL) bank_ = new ::tibia::protobuf::appearances::AppearanceFlagBank;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.bank)
  return bank_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagBank* AppearanceFlags::release_bank() {
  clear_has_bank();
  ::tibia::protobuf::appearances::AppearanceFlagBank* temp = bank_;
  bank_ = NULL;
  return temp;
}
inline void AppearanceFlags::set_allocated_bank(::tibia::protobuf::appearances::AppearanceFlagBank* bank) {
  delete bank_;
  bank_ = bank;
  if (bank) {
    set_has_bank();
  } else {
    clear_has_bank();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlags.bank)
}

// optional bool clip = 2;
inline bool AppearanceFlags::has_clip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppearanceFlags::set_has_clip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppearanceFlags::clear_has_clip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppearanceFlags::clear_clip() {
  clip_ = false;
  clear_has_clip();
}
inline bool AppearanceFlags::clip() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.clip)
  return clip_;
}
inline void AppearanceFlags::set_clip(bool value) {
  set_has_clip();
  clip_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.clip)
}

// optional bool bottom = 3;
inline bool AppearanceFlags::has_bottom() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppearanceFlags::set_has_bottom() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppearanceFlags::clear_has_bottom() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppearanceFlags::clear_bottom() {
  bottom_ = false;
  clear_has_bottom();
}
inline bool AppearanceFlags::bottom() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.bottom)
  return bottom_;
}
inline void AppearanceFlags::set_bottom(bool value) {
  set_has_bottom();
  bottom_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.bottom)
}

// optional bool top = 4;
inline bool AppearanceFlags::has_top() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppearanceFlags::set_has_top() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppearanceFlags::clear_has_top() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppearanceFlags::clear_top() {
  top_ = false;
  clear_has_top();
}
inline bool AppearanceFlags::top() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.top)
  return top_;
}
inline void AppearanceFlags::set_top(bool value) {
  set_has_top();
  top_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.top)
}

// optional bool container = 5;
inline bool AppearanceFlags::has_container() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppearanceFlags::set_has_container() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppearanceFlags::clear_has_container() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppearanceFlags::clear_container() {
  container_ = false;
  clear_has_container();
}
inline bool AppearanceFlags::container() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.container)
  return container_;
}
inline void AppearanceFlags::set_container(bool value) {
  set_has_container();
  container_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.container)
}

// optional bool cumulative = 6;
inline bool AppearanceFlags::has_cumulative() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AppearanceFlags::set_has_cumulative() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AppearanceFlags::clear_has_cumulative() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AppearanceFlags::clear_cumulative() {
  cumulative_ = false;
  clear_has_cumulative();
}
inline bool AppearanceFlags::cumulative() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.cumulative)
  return cumulative_;
}
inline void AppearanceFlags::set_cumulative(bool value) {
  set_has_cumulative();
  cumulative_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.cumulative)
}

// optional bool usable = 7;
inline bool AppearanceFlags::has_usable() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AppearanceFlags::set_has_usable() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AppearanceFlags::clear_has_usable() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AppearanceFlags::clear_usable() {
  usable_ = false;
  clear_has_usable();
}
inline bool AppearanceFlags::usable() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.usable)
  return usable_;
}
inline void AppearanceFlags::set_usable(bool value) {
  set_has_usable();
  usable_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.usable)
}

// optional bool forceuse = 8;
inline bool AppearanceFlags::has_forceuse() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AppearanceFlags::set_has_forceuse() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AppearanceFlags::clear_has_forceuse() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AppearanceFlags::clear_forceuse() {
  forceuse_ = false;
  clear_has_forceuse();
}
inline bool AppearanceFlags::forceuse() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.forceuse)
  return forceuse_;
}
inline void AppearanceFlags::set_forceuse(bool value) {
  set_has_forceuse();
  forceuse_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.forceuse)
}

// optional bool multiuse = 9;
inline bool AppearanceFlags::has_multiuse() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AppearanceFlags::set_has_multiuse() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AppearanceFlags::clear_has_multiuse() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AppearanceFlags::clear_multiuse() {
  multiuse_ = false;
  clear_has_multiuse();
}
inline bool AppearanceFlags::multiuse() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.multiuse)
  return multiuse_;
}
inline void AppearanceFlags::set_multiuse(bool value) {
  set_has_multiuse();
  multiuse_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.multiuse)
}

// optional .tibia.protobuf.appearances.AppearanceFlagWrite write = 10;
inline bool AppearanceFlags::has_write() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AppearanceFlags::set_has_write() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AppearanceFlags::clear_has_write() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AppearanceFlags::clear_write() {
  if (write_ != NULL) write_->::tibia::protobuf::appearances::AppearanceFlagWrite::Clear();
  clear_has_write();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagWrite& AppearanceFlags::write() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.write)
  return write_ != NULL ? *write_ : *default_instance_->write_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagWrite* AppearanceFlags::mutable_write() {
  set_has_write();
  if (write_ == NULL) write_ = new ::tibia::protobuf::appearances::AppearanceFlagWrite;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.write)
  return write_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagWrite* AppearanceFlags::release_write() {
  clear_has_write();
  ::tibia::protobuf::appearances::AppearanceFlagWrite* temp = write_;
  write_ = NULL;
  return temp;
}
inline void AppearanceFlags::set_allocated_write(::tibia::protobuf::appearances::AppearanceFlagWrite* write) {
  delete write_;
  write_ = write;
  if (write) {
    set_has_write();
  } else {
    clear_has_write();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlags.write)
}

// optional .tibia.protobuf.appearances.AppearanceFlagWriteOnce write_once = 11;
inline bool AppearanceFlags::has_write_once() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AppearanceFlags::set_has_write_once() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AppearanceFlags::clear_has_write_once() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AppearanceFlags::clear_write_once() {
  if (write_once_ != NULL) write_once_->::tibia::protobuf::appearances::AppearanceFlagWriteOnce::Clear();
  clear_has_write_once();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagWriteOnce& AppearanceFlags::write_once() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.write_once)
  return write_once_ != NULL ? *write_once_ : *default_instance_->write_once_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagWriteOnce* AppearanceFlags::mutable_write_once() {
  set_has_write_once();
  if (write_once_ == NULL) write_once_ = new ::tibia::protobuf::appearances::AppearanceFlagWriteOnce;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.write_once)
  return write_once_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagWriteOnce* AppearanceFlags::release_write_once() {
  clear_has_write_once();
  ::tibia::protobuf::appearances::AppearanceFlagWriteOnce* temp = write_once_;
  write_once_ = NULL;
  return temp;
}
inline void AppearanceFlags::set_allocated_write_once(::tibia::protobuf::appearances::AppearanceFlagWriteOnce* write_once) {
  delete write_once_;
  write_once_ = write_once;
  if (write_once) {
    set_has_write_once();
  } else {
    clear_has_write_once();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlags.write_once)
}

// optional bool liquidpool = 12;
inline bool AppearanceFlags::has_liquidpool() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AppearanceFlags::set_has_liquidpool() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AppearanceFlags::clear_has_liquidpool() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AppearanceFlags::clear_liquidpool() {
  liquidpool_ = false;
  clear_has_liquidpool();
}
inline bool AppearanceFlags::liquidpool() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.liquidpool)
  return liquidpool_;
}
inline void AppearanceFlags::set_liquidpool(bool value) {
  set_has_liquidpool();
  liquidpool_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.liquidpool)
}

// optional bool unpass = 13;
inline bool AppearanceFlags::has_unpass() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AppearanceFlags::set_has_unpass() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AppearanceFlags::clear_has_unpass() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AppearanceFlags::clear_unpass() {
  unpass_ = false;
  clear_has_unpass();
}
inline bool AppearanceFlags::unpass() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.unpass)
  return unpass_;
}
inline void AppearanceFlags::set_unpass(bool value) {
  set_has_unpass();
  unpass_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.unpass)
}

// optional bool unmove = 14;
inline bool AppearanceFlags::has_unmove() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AppearanceFlags::set_has_unmove() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AppearanceFlags::clear_has_unmove() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AppearanceFlags::clear_unmove() {
  unmove_ = false;
  clear_has_unmove();
}
inline bool AppearanceFlags::unmove() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.unmove)
  return unmove_;
}
inline void AppearanceFlags::set_unmove(bool value) {
  set_has_unmove();
  unmove_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.unmove)
}

// optional bool unsight = 15;
inline bool AppearanceFlags::has_unsight() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AppearanceFlags::set_has_unsight() {
  _has_bits_[0] |= 0x00004000u;
}
inline void AppearanceFlags::clear_has_unsight() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void AppearanceFlags::clear_unsight() {
  unsight_ = false;
  clear_has_unsight();
}
inline bool AppearanceFlags::unsight() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.unsight)
  return unsight_;
}
inline void AppearanceFlags::set_unsight(bool value) {
  set_has_unsight();
  unsight_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.unsight)
}

// optional bool avoid = 16;
inline bool AppearanceFlags::has_avoid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void AppearanceFlags::set_has_avoid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void AppearanceFlags::clear_has_avoid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void AppearanceFlags::clear_avoid() {
  avoid_ = false;
  clear_has_avoid();
}
inline bool AppearanceFlags::avoid() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.avoid)
  return avoid_;
}
inline void AppearanceFlags::set_avoid(bool value) {
  set_has_avoid();
  avoid_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.avoid)
}

// optional bool no_movement_animation = 17;
inline bool AppearanceFlags::has_no_movement_animation() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void AppearanceFlags::set_has_no_movement_animation() {
  _has_bits_[0] |= 0x00010000u;
}
inline void AppearanceFlags::clear_has_no_movement_animation() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void AppearanceFlags::clear_no_movement_animation() {
  no_movement_animation_ = false;
  clear_has_no_movement_animation();
}
inline bool AppearanceFlags::no_movement_animation() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.no_movement_animation)
  return no_movement_animation_;
}
inline void AppearanceFlags::set_no_movement_animation(bool value) {
  set_has_no_movement_animation();
  no_movement_animation_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.no_movement_animation)
}

// optional bool take = 18;
inline bool AppearanceFlags::has_take() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void AppearanceFlags::set_has_take() {
  _has_bits_[0] |= 0x00020000u;
}
inline void AppearanceFlags::clear_has_take() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void AppearanceFlags::clear_take() {
  take_ = false;
  clear_has_take();
}
inline bool AppearanceFlags::take() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.take)
  return take_;
}
inline void AppearanceFlags::set_take(bool value) {
  set_has_take();
  take_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.take)
}

// optional bool liquidcontainer = 19;
inline bool AppearanceFlags::has_liquidcontainer() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void AppearanceFlags::set_has_liquidcontainer() {
  _has_bits_[0] |= 0x00040000u;
}
inline void AppearanceFlags::clear_has_liquidcontainer() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void AppearanceFlags::clear_liquidcontainer() {
  liquidcontainer_ = false;
  clear_has_liquidcontainer();
}
inline bool AppearanceFlags::liquidcontainer() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.liquidcontainer)
  return liquidcontainer_;
}
inline void AppearanceFlags::set_liquidcontainer(bool value) {
  set_has_liquidcontainer();
  liquidcontainer_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.liquidcontainer)
}

// optional bool hang = 20;
inline bool AppearanceFlags::has_hang() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void AppearanceFlags::set_has_hang() {
  _has_bits_[0] |= 0x00080000u;
}
inline void AppearanceFlags::clear_has_hang() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void AppearanceFlags::clear_hang() {
  hang_ = false;
  clear_has_hang();
}
inline bool AppearanceFlags::hang() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.hang)
  return hang_;
}
inline void AppearanceFlags::set_hang(bool value) {
  set_has_hang();
  hang_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.hang)
}

// optional .tibia.protobuf.appearances.AppearanceFlagHook hook = 21;
inline bool AppearanceFlags::has_hook() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void AppearanceFlags::set_has_hook() {
  _has_bits_[0] |= 0x00100000u;
}
inline void AppearanceFlags::clear_has_hook() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void AppearanceFlags::clear_hook() {
  if (hook_ != NULL) hook_->::tibia::protobuf::appearances::AppearanceFlagHook::Clear();
  clear_has_hook();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagHook& AppearanceFlags::hook() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.hook)
  return hook_ != NULL ? *hook_ : *default_instance_->hook_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagHook* AppearanceFlags::mutable_hook() {
  set_has_hook();
  if (hook_ == NULL) hook_ = new ::tibia::protobuf::appearances::AppearanceFlagHook;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.hook)
  return hook_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagHook* AppearanceFlags::release_hook() {
  clear_has_hook();
  ::tibia::protobuf::appearances::AppearanceFlagHook* temp = hook_;
  hook_ = NULL;
  return temp;
}
inline void AppearanceFlags::set_allocated_hook(::tibia::protobuf::appearances::AppearanceFlagHook* hook) {
  delete hook_;
  hook_ = hook;
  if (hook) {
    set_has_hook();
  } else {
    clear_has_hook();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlags.hook)
}

// optional bool rotate = 22;
inline bool AppearanceFlags::has_rotate() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void AppearanceFlags::set_has_rotate() {
  _has_bits_[0] |= 0x00200000u;
}
inline void AppearanceFlags::clear_has_rotate() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void AppearanceFlags::clear_rotate() {
  rotate_ = false;
  clear_has_rotate();
}
inline bool AppearanceFlags::rotate() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.rotate)
  return rotate_;
}
inline void AppearanceFlags::set_rotate(bool value) {
  set_has_rotate();
  rotate_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.rotate)
}

// optional .tibia.protobuf.appearances.AppearanceFlagLight light = 23;
inline bool AppearanceFlags::has_light() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void AppearanceFlags::set_has_light() {
  _has_bits_[0] |= 0x00400000u;
}
inline void AppearanceFlags::clear_has_light() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void AppearanceFlags::clear_light() {
  if (light_ != NULL) light_->::tibia::protobuf::appearances::AppearanceFlagLight::Clear();
  clear_has_light();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagLight& AppearanceFlags::light() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.light)
  return light_ != NULL ? *light_ : *default_instance_->light_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagLight* AppearanceFlags::mutable_light() {
  set_has_light();
  if (light_ == NULL) light_ = new ::tibia::protobuf::appearances::AppearanceFlagLight;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.light)
  return light_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagLight* AppearanceFlags::release_light() {
  clear_has_light();
  ::tibia::protobuf::appearances::AppearanceFlagLight* temp = light_;
  light_ = NULL;
  return temp;
}
inline void AppearanceFlags::set_allocated_light(::tibia::protobuf::appearances::AppearanceFlagLight* light) {
  delete light_;
  light_ = light;
  if (light) {
    set_has_light();
  } else {
    clear_has_light();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlags.light)
}

// optional bool dont_hide = 24;
inline bool AppearanceFlags::has_dont_hide() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void AppearanceFlags::set_has_dont_hide() {
  _has_bits_[0] |= 0x00800000u;
}
inline void AppearanceFlags::clear_has_dont_hide() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void AppearanceFlags::clear_dont_hide() {
  dont_hide_ = false;
  clear_has_dont_hide();
}
inline bool AppearanceFlags::dont_hide() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.dont_hide)
  return dont_hide_;
}
inline void AppearanceFlags::set_dont_hide(bool value) {
  set_has_dont_hide();
  dont_hide_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.dont_hide)
}

// optional bool translucent = 25;
inline bool AppearanceFlags::has_translucent() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void AppearanceFlags::set_has_translucent() {
  _has_bits_[0] |= 0x01000000u;
}
inline void AppearanceFlags::clear_has_translucent() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void AppearanceFlags::clear_translucent() {
  translucent_ = false;
  clear_has_translucent();
}
inline bool AppearanceFlags::translucent() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.translucent)
  return translucent_;
}
inline void AppearanceFlags::set_translucent(bool value) {
  set_has_translucent();
  translucent_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.translucent)
}

// optional .tibia.protobuf.appearances.AppearanceFlagShift shift = 26;
inline bool AppearanceFlags::has_shift() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void AppearanceFlags::set_has_shift() {
  _has_bits_[0] |= 0x02000000u;
}
inline void AppearanceFlags::clear_has_shift() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void AppearanceFlags::clear_shift() {
  if (shift_ != NULL) shift_->::tibia::protobuf::appearances::AppearanceFlagShift::Clear();
  clear_has_shift();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagShift& AppearanceFlags::shift() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.shift)
  return shift_ != NULL ? *shift_ : *default_instance_->shift_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagShift* AppearanceFlags::mutable_shift() {
  set_has_shift();
  if (shift_ == NULL) shift_ = new ::tibia::protobuf::appearances::AppearanceFlagShift;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.shift)
  return shift_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagShift* AppearanceFlags::release_shift() {
  clear_has_shift();
  ::tibia::protobuf::appearances::AppearanceFlagShift* temp = shift_;
  shift_ = NULL;
  return temp;
}
inline void AppearanceFlags::set_allocated_shift(::tibia::protobuf::appearances::AppearanceFlagShift* shift) {
  delete shift_;
  shift_ = shift;
  if (shift) {
    set_has_shift();
  } else {
    clear_has_shift();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlags.shift)
}

// optional .tibia.protobuf.appearances.AppearanceFlagHeight height = 27;
inline bool AppearanceFlags::has_height() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void AppearanceFlags::set_has_height() {
  _has_bits_[0] |= 0x04000000u;
}
inline void AppearanceFlags::clear_has_height() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void AppearanceFlags::clear_height() {
  if (height_ != NULL) height_->::tibia::protobuf::appearances::AppearanceFlagHeight::Clear();
  clear_has_height();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagHeight& AppearanceFlags::height() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.height)
  return height_ != NULL ? *height_ : *default_instance_->height_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagHeight* AppearanceFlags::mutable_height() {
  set_has_height();
  if (height_ == NULL) height_ = new ::tibia::protobuf::appearances::AppearanceFlagHeight;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.height)
  return height_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagHeight* AppearanceFlags::release_height() {
  clear_has_height();
  ::tibia::protobuf::appearances::AppearanceFlagHeight* temp = height_;
  height_ = NULL;
  return temp;
}
inline void AppearanceFlags::set_allocated_height(::tibia::protobuf::appearances::AppearanceFlagHeight* height) {
  delete height_;
  height_ = height;
  if (height) {
    set_has_height();
  } else {
    clear_has_height();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlags.height)
}

// optional bool lying_object = 28;
inline bool AppearanceFlags::has_lying_object() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void AppearanceFlags::set_has_lying_object() {
  _has_bits_[0] |= 0x08000000u;
}
inline void AppearanceFlags::clear_has_lying_object() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void AppearanceFlags::clear_lying_object() {
  lying_object_ = false;
  clear_has_lying_object();
}
inline bool AppearanceFlags::lying_object() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.lying_object)
  return lying_object_;
}
inline void AppearanceFlags::set_lying_object(bool value) {
  set_has_lying_object();
  lying_object_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.lying_object)
}

// optional bool animate_always = 29;
inline bool AppearanceFlags::has_animate_always() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void AppearanceFlags::set_has_animate_always() {
  _has_bits_[0] |= 0x10000000u;
}
inline void AppearanceFlags::clear_has_animate_always() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void AppearanceFlags::clear_animate_always() {
  animate_always_ = false;
  clear_has_animate_always();
}
inline bool AppearanceFlags::animate_always() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.animate_always)
  return animate_always_;
}
inline void AppearanceFlags::set_animate_always(bool value) {
  set_has_animate_always();
  animate_always_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.animate_always)
}

// optional .tibia.protobuf.appearances.AppearanceFlagAutomap automap = 30;
inline bool AppearanceFlags::has_automap() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void AppearanceFlags::set_has_automap() {
  _has_bits_[0] |= 0x20000000u;
}
inline void AppearanceFlags::clear_has_automap() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void AppearanceFlags::clear_automap() {
  if (automap_ != NULL) automap_->::tibia::protobuf::appearances::AppearanceFlagAutomap::Clear();
  clear_has_automap();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagAutomap& AppearanceFlags::automap() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.automap)
  return automap_ != NULL ? *automap_ : *default_instance_->automap_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagAutomap* AppearanceFlags::mutable_automap() {
  set_has_automap();
  if (automap_ == NULL) automap_ = new ::tibia::protobuf::appearances::AppearanceFlagAutomap;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.automap)
  return automap_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagAutomap* AppearanceFlags::release_automap() {
  clear_has_automap();
  ::tibia::protobuf::appearances::AppearanceFlagAutomap* temp = automap_;
  automap_ = NULL;
  return temp;
}
inline void AppearanceFlags::set_allocated_automap(::tibia::protobuf::appearances::AppearanceFlagAutomap* automap) {
  delete automap_;
  automap_ = automap;
  if (automap) {
    set_has_automap();
  } else {
    clear_has_automap();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlags.automap)
}

// optional .tibia.protobuf.appearances.AppearanceFlagLenshelp lenshelp = 31;
inline bool AppearanceFlags::has_lenshelp() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void AppearanceFlags::set_has_lenshelp() {
  _has_bits_[0] |= 0x40000000u;
}
inline void AppearanceFlags::clear_has_lenshelp() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void AppearanceFlags::clear_lenshelp() {
  if (lenshelp_ != NULL) lenshelp_->::tibia::protobuf::appearances::AppearanceFlagLenshelp::Clear();
  clear_has_lenshelp();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagLenshelp& AppearanceFlags::lenshelp() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.lenshelp)
  return lenshelp_ != NULL ? *lenshelp_ : *default_instance_->lenshelp_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagLenshelp* AppearanceFlags::mutable_lenshelp() {
  set_has_lenshelp();
  if (lenshelp_ == NULL) lenshelp_ = new ::tibia::protobuf::appearances::AppearanceFlagLenshelp;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.lenshelp)
  return lenshelp_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagLenshelp* AppearanceFlags::release_lenshelp() {
  clear_has_lenshelp();
  ::tibia::protobuf::appearances::AppearanceFlagLenshelp* temp = lenshelp_;
  lenshelp_ = NULL;
  return temp;
}
inline void AppearanceFlags::set_allocated_lenshelp(::tibia::protobuf::appearances::AppearanceFlagLenshelp* lenshelp) {
  delete lenshelp_;
  lenshelp_ = lenshelp;
  if (lenshelp) {
    set_has_lenshelp();
  } else {
    clear_has_lenshelp();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlags.lenshelp)
}

// optional bool fullbank = 32;
inline bool AppearanceFlags::has_fullbank() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void AppearanceFlags::set_has_fullbank() {
  _has_bits_[0] |= 0x80000000u;
}
inline void AppearanceFlags::clear_has_fullbank() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void AppearanceFlags::clear_fullbank() {
  fullbank_ = false;
  clear_has_fullbank();
}
inline bool AppearanceFlags::fullbank() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.fullbank)
  return fullbank_;
}
inline void AppearanceFlags::set_fullbank(bool value) {
  set_has_fullbank();
  fullbank_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.fullbank)
}

// optional bool ignore_look = 33;
inline bool AppearanceFlags::has_ignore_look() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void AppearanceFlags::set_has_ignore_look() {
  _has_bits_[1] |= 0x00000001u;
}
inline void AppearanceFlags::clear_has_ignore_look() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void AppearanceFlags::clear_ignore_look() {
  ignore_look_ = false;
  clear_has_ignore_look();
}
inline bool AppearanceFlags::ignore_look() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.ignore_look)
  return ignore_look_;
}
inline void AppearanceFlags::set_ignore_look(bool value) {
  set_has_ignore_look();
  ignore_look_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.ignore_look)
}

// optional .tibia.protobuf.appearances.AppearanceFlagClothes clothes = 34;
inline bool AppearanceFlags::has_clothes() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void AppearanceFlags::set_has_clothes() {
  _has_bits_[1] |= 0x00000002u;
}
inline void AppearanceFlags::clear_has_clothes() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void AppearanceFlags::clear_clothes() {
  if (clothes_ != NULL) clothes_->::tibia::protobuf::appearances::AppearanceFlagClothes::Clear();
  clear_has_clothes();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagClothes& AppearanceFlags::clothes() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.clothes)
  return clothes_ != NULL ? *clothes_ : *default_instance_->clothes_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagClothes* AppearanceFlags::mutable_clothes() {
  set_has_clothes();
  if (clothes_ == NULL) clothes_ = new ::tibia::protobuf::appearances::AppearanceFlagClothes;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.clothes)
  return clothes_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagClothes* AppearanceFlags::release_clothes() {
  clear_has_clothes();
  ::tibia::protobuf::appearances::AppearanceFlagClothes* temp = clothes_;
  clothes_ = NULL;
  return temp;
}
inline void AppearanceFlags::set_allocated_clothes(::tibia::protobuf::appearances::AppearanceFlagClothes* clothes) {
  delete clothes_;
  clothes_ = clothes;
  if (clothes) {
    set_has_clothes();
  } else {
    clear_has_clothes();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlags.clothes)
}

// optional .tibia.protobuf.appearances.AppearanceFlagDefaultAction default_action = 35;
inline bool AppearanceFlags::has_default_action() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void AppearanceFlags::set_has_default_action() {
  _has_bits_[1] |= 0x00000004u;
}
inline void AppearanceFlags::clear_has_default_action() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void AppearanceFlags::clear_default_action() {
  if (default_action_ != NULL) default_action_->::tibia::protobuf::appearances::AppearanceFlagDefaultAction::Clear();
  clear_has_default_action();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagDefaultAction& AppearanceFlags::default_action() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.default_action)
  return default_action_ != NULL ? *default_action_ : *default_instance_->default_action_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagDefaultAction* AppearanceFlags::mutable_default_action() {
  set_has_default_action();
  if (default_action_ == NULL) default_action_ = new ::tibia::protobuf::appearances::AppearanceFlagDefaultAction;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.default_action)
  return default_action_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagDefaultAction* AppearanceFlags::release_default_action() {
  clear_has_default_action();
  ::tibia::protobuf::appearances::AppearanceFlagDefaultAction* temp = default_action_;
  default_action_ = NULL;
  return temp;
}
inline void AppearanceFlags::set_allocated_default_action(::tibia::protobuf::appearances::AppearanceFlagDefaultAction* default_action) {
  delete default_action_;
  default_action_ = default_action;
  if (default_action) {
    set_has_default_action();
  } else {
    clear_has_default_action();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlags.default_action)
}

// optional .tibia.protobuf.appearances.AppearanceFlagMarket market = 36;
inline bool AppearanceFlags::has_market() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void AppearanceFlags::set_has_market() {
  _has_bits_[1] |= 0x00000008u;
}
inline void AppearanceFlags::clear_has_market() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void AppearanceFlags::clear_market() {
  if (market_ != NULL) market_->::tibia::protobuf::appearances::AppearanceFlagMarket::Clear();
  clear_has_market();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagMarket& AppearanceFlags::market() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.market)
  return market_ != NULL ? *market_ : *default_instance_->market_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagMarket* AppearanceFlags::mutable_market() {
  set_has_market();
  if (market_ == NULL) market_ = new ::tibia::protobuf::appearances::AppearanceFlagMarket;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.market)
  return market_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagMarket* AppearanceFlags::release_market() {
  clear_has_market();
  ::tibia::protobuf::appearances::AppearanceFlagMarket* temp = market_;
  market_ = NULL;
  return temp;
}
inline void AppearanceFlags::set_allocated_market(::tibia::protobuf::appearances::AppearanceFlagMarket* market) {
  delete market_;
  market_ = market;
  if (market) {
    set_has_market();
  } else {
    clear_has_market();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlags.market)
}

// optional bool wrap = 37;
inline bool AppearanceFlags::has_wrap() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void AppearanceFlags::set_has_wrap() {
  _has_bits_[1] |= 0x00000010u;
}
inline void AppearanceFlags::clear_has_wrap() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void AppearanceFlags::clear_wrap() {
  wrap_ = false;
  clear_has_wrap();
}
inline bool AppearanceFlags::wrap() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.wrap)
  return wrap_;
}
inline void AppearanceFlags::set_wrap(bool value) {
  set_has_wrap();
  wrap_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.wrap)
}

// optional bool unwrap = 38;
inline bool AppearanceFlags::has_unwrap() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void AppearanceFlags::set_has_unwrap() {
  _has_bits_[1] |= 0x00000020u;
}
inline void AppearanceFlags::clear_has_unwrap() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void AppearanceFlags::clear_unwrap() {
  unwrap_ = false;
  clear_has_unwrap();
}
inline bool AppearanceFlags::unwrap() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.unwrap)
  return unwrap_;
}
inline void AppearanceFlags::set_unwrap(bool value) {
  set_has_unwrap();
  unwrap_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.unwrap)
}

// optional bool topeffect = 39;
inline bool AppearanceFlags::has_topeffect() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void AppearanceFlags::set_has_topeffect() {
  _has_bits_[1] |= 0x00000040u;
}
inline void AppearanceFlags::clear_has_topeffect() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void AppearanceFlags::clear_topeffect() {
  topeffect_ = false;
  clear_has_topeffect();
}
inline bool AppearanceFlags::topeffect() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.topeffect)
  return topeffect_;
}
inline void AppearanceFlags::set_topeffect(bool value) {
  set_has_topeffect();
  topeffect_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.topeffect)
}

// repeated .tibia.protobuf.appearances.AppearanceFlagNPC npcsaledata = 40;
inline int AppearanceFlags::npcsaledata_size() const {
  return npcsaledata_.size();
}
inline void AppearanceFlags::clear_npcsaledata() {
  npcsaledata_.Clear();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagNPC& AppearanceFlags::npcsaledata(int index) const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.npcsaledata)
  return npcsaledata_.Get(index);
}
inline ::tibia::protobuf::appearances::AppearanceFlagNPC* AppearanceFlags::mutable_npcsaledata(int index) {
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.npcsaledata)
  return npcsaledata_.Mutable(index);
}
inline ::tibia::protobuf::appearances::AppearanceFlagNPC* AppearanceFlags::add_npcsaledata() {
  // @@protoc_insertion_point(field_add:tibia.protobuf.appearances.AppearanceFlags.npcsaledata)
  return npcsaledata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::AppearanceFlagNPC >&
AppearanceFlags::npcsaledata() const {
  // @@protoc_insertion_point(field_list:tibia.protobuf.appearances.AppearanceFlags.npcsaledata)
  return npcsaledata_;
}
inline ::google::protobuf::RepeatedPtrField< ::tibia::protobuf::appearances::AppearanceFlagNPC >*
AppearanceFlags::mutable_npcsaledata() {
  // @@protoc_insertion_point(field_mutable_list:tibia.protobuf.appearances.AppearanceFlags.npcsaledata)
  return &npcsaledata_;
}

// optional .tibia.protobuf.appearances.AppearanceFlagChangedToExpire changedtoexpire = 41;
inline bool AppearanceFlags::has_changedtoexpire() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void AppearanceFlags::set_has_changedtoexpire() {
  _has_bits_[1] |= 0x00000100u;
}
inline void AppearanceFlags::clear_has_changedtoexpire() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void AppearanceFlags::clear_changedtoexpire() {
  if (changedtoexpire_ != NULL) changedtoexpire_->::tibia::protobuf::appearances::AppearanceFlagChangedToExpire::Clear();
  clear_has_changedtoexpire();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagChangedToExpire& AppearanceFlags::changedtoexpire() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.changedtoexpire)
  return changedtoexpire_ != NULL ? *changedtoexpire_ : *default_instance_->changedtoexpire_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagChangedToExpire* AppearanceFlags::mutable_changedtoexpire() {
  set_has_changedtoexpire();
  if (changedtoexpire_ == NULL) changedtoexpire_ = new ::tibia::protobuf::appearances::AppearanceFlagChangedToExpire;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.changedtoexpire)
  return changedtoexpire_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagChangedToExpire* AppearanceFlags::release_changedtoexpire() {
  clear_has_changedtoexpire();
  ::tibia::protobuf::appearances::AppearanceFlagChangedToExpire* temp = changedtoexpire_;
  changedtoexpire_ = NULL;
  return temp;
}
inline void AppearanceFlags::set_allocated_changedtoexpire(::tibia::protobuf::appearances::AppearanceFlagChangedToExpire* changedtoexpire) {
  delete changedtoexpire_;
  changedtoexpire_ = changedtoexpire;
  if (changedtoexpire) {
    set_has_changedtoexpire();
  } else {
    clear_has_changedtoexpire();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlags.changedtoexpire)
}

// optional bool corpse = 42;
inline bool AppearanceFlags::has_corpse() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void AppearanceFlags::set_has_corpse() {
  _has_bits_[1] |= 0x00000200u;
}
inline void AppearanceFlags::clear_has_corpse() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void AppearanceFlags::clear_corpse() {
  corpse_ = false;
  clear_has_corpse();
}
inline bool AppearanceFlags::corpse() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.corpse)
  return corpse_;
}
inline void AppearanceFlags::set_corpse(bool value) {
  set_has_corpse();
  corpse_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.corpse)
}

// optional bool player_corpse = 43;
inline bool AppearanceFlags::has_player_corpse() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void AppearanceFlags::set_has_player_corpse() {
  _has_bits_[1] |= 0x00000400u;
}
inline void AppearanceFlags::clear_has_player_corpse() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void AppearanceFlags::clear_player_corpse() {
  player_corpse_ = false;
  clear_has_player_corpse();
}
inline bool AppearanceFlags::player_corpse() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.player_corpse)
  return player_corpse_;
}
inline void AppearanceFlags::set_player_corpse(bool value) {
  set_has_player_corpse();
  player_corpse_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlags.player_corpse)
}

// optional .tibia.protobuf.appearances.AppearanceFlagCyclopedia cyclopediaitem = 44;
inline bool AppearanceFlags::has_cyclopediaitem() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void AppearanceFlags::set_has_cyclopediaitem() {
  _has_bits_[1] |= 0x00000800u;
}
inline void AppearanceFlags::clear_has_cyclopediaitem() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void AppearanceFlags::clear_cyclopediaitem() {
  if (cyclopediaitem_ != NULL) cyclopediaitem_->::tibia::protobuf::appearances::AppearanceFlagCyclopedia::Clear();
  clear_has_cyclopediaitem();
}
inline const ::tibia::protobuf::appearances::AppearanceFlagCyclopedia& AppearanceFlags::cyclopediaitem() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlags.cyclopediaitem)
  return cyclopediaitem_ != NULL ? *cyclopediaitem_ : *default_instance_->cyclopediaitem_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagCyclopedia* AppearanceFlags::mutable_cyclopediaitem() {
  set_has_cyclopediaitem();
  if (cyclopediaitem_ == NULL) cyclopediaitem_ = new ::tibia::protobuf::appearances::AppearanceFlagCyclopedia;
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlags.cyclopediaitem)
  return cyclopediaitem_;
}
inline ::tibia::protobuf::appearances::AppearanceFlagCyclopedia* AppearanceFlags::release_cyclopediaitem() {
  clear_has_cyclopediaitem();
  ::tibia::protobuf::appearances::AppearanceFlagCyclopedia* temp = cyclopediaitem_;
  cyclopediaitem_ = NULL;
  return temp;
}
inline void AppearanceFlags::set_allocated_cyclopediaitem(::tibia::protobuf::appearances::AppearanceFlagCyclopedia* cyclopediaitem) {
  delete cyclopediaitem_;
  cyclopediaitem_ = cyclopediaitem;
  if (cyclopediaitem) {
    set_has_cyclopediaitem();
  } else {
    clear_has_cyclopediaitem();
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlags.cyclopediaitem)
}

// -------------------------------------------------------------------

// AppearanceFlagBank

// optional uint32 waypoints = 1;
inline bool AppearanceFlagBank::has_waypoints() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagBank::set_has_waypoints() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagBank::clear_has_waypoints() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagBank::clear_waypoints() {
  waypoints_ = 0u;
  clear_has_waypoints();
}
inline ::google::protobuf::uint32 AppearanceFlagBank::waypoints() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagBank.waypoints)
  return waypoints_;
}
inline void AppearanceFlagBank::set_waypoints(::google::protobuf::uint32 value) {
  set_has_waypoints();
  waypoints_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagBank.waypoints)
}

// -------------------------------------------------------------------

// AppearanceFlagWrite

// optional uint32 max_text_length = 1;
inline bool AppearanceFlagWrite::has_max_text_length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagWrite::set_has_max_text_length() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagWrite::clear_has_max_text_length() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagWrite::clear_max_text_length() {
  max_text_length_ = 0u;
  clear_has_max_text_length();
}
inline ::google::protobuf::uint32 AppearanceFlagWrite::max_text_length() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagWrite.max_text_length)
  return max_text_length_;
}
inline void AppearanceFlagWrite::set_max_text_length(::google::protobuf::uint32 value) {
  set_has_max_text_length();
  max_text_length_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagWrite.max_text_length)
}

// -------------------------------------------------------------------

// AppearanceFlagWriteOnce

// optional uint32 max_text_length_once = 1;
inline bool AppearanceFlagWriteOnce::has_max_text_length_once() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagWriteOnce::set_has_max_text_length_once() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagWriteOnce::clear_has_max_text_length_once() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagWriteOnce::clear_max_text_length_once() {
  max_text_length_once_ = 0u;
  clear_has_max_text_length_once();
}
inline ::google::protobuf::uint32 AppearanceFlagWriteOnce::max_text_length_once() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagWriteOnce.max_text_length_once)
  return max_text_length_once_;
}
inline void AppearanceFlagWriteOnce::set_max_text_length_once(::google::protobuf::uint32 value) {
  set_has_max_text_length_once();
  max_text_length_once_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagWriteOnce.max_text_length_once)
}

// -------------------------------------------------------------------

// AppearanceFlagLight

// optional uint32 brightness = 1;
inline bool AppearanceFlagLight::has_brightness() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagLight::set_has_brightness() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagLight::clear_has_brightness() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagLight::clear_brightness() {
  brightness_ = 0u;
  clear_has_brightness();
}
inline ::google::protobuf::uint32 AppearanceFlagLight::brightness() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagLight.brightness)
  return brightness_;
}
inline void AppearanceFlagLight::set_brightness(::google::protobuf::uint32 value) {
  set_has_brightness();
  brightness_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagLight.brightness)
}

// optional uint32 color = 2;
inline bool AppearanceFlagLight::has_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppearanceFlagLight::set_has_color() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppearanceFlagLight::clear_has_color() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppearanceFlagLight::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 AppearanceFlagLight::color() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagLight.color)
  return color_;
}
inline void AppearanceFlagLight::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagLight.color)
}

// -------------------------------------------------------------------

// AppearanceFlagHeight

// optional uint32 elevation = 1;
inline bool AppearanceFlagHeight::has_elevation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagHeight::set_has_elevation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagHeight::clear_has_elevation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagHeight::clear_elevation() {
  elevation_ = 0u;
  clear_has_elevation();
}
inline ::google::protobuf::uint32 AppearanceFlagHeight::elevation() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagHeight.elevation)
  return elevation_;
}
inline void AppearanceFlagHeight::set_elevation(::google::protobuf::uint32 value) {
  set_has_elevation();
  elevation_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagHeight.elevation)
}

// -------------------------------------------------------------------

// AppearanceFlagShift

// optional uint32 x = 1;
inline bool AppearanceFlagShift::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagShift::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagShift::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagShift::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 AppearanceFlagShift::x() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagShift.x)
  return x_;
}
inline void AppearanceFlagShift::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagShift.x)
}

// optional uint32 y = 2;
inline bool AppearanceFlagShift::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppearanceFlagShift::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppearanceFlagShift::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppearanceFlagShift::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 AppearanceFlagShift::y() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagShift.y)
  return y_;
}
inline void AppearanceFlagShift::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagShift.y)
}

// -------------------------------------------------------------------

// AppearanceFlagClothes

// optional uint32 slot = 1;
inline bool AppearanceFlagClothes::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagClothes::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagClothes::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagClothes::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 AppearanceFlagClothes::slot() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagClothes.slot)
  return slot_;
}
inline void AppearanceFlagClothes::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagClothes.slot)
}

// -------------------------------------------------------------------

// AppearanceFlagDefaultAction

// optional .tibia.protobuf.shared.PLAYER_ACTION action = 1;
inline bool AppearanceFlagDefaultAction::has_action() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagDefaultAction::set_has_action() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagDefaultAction::clear_has_action() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagDefaultAction::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::tibia::protobuf::shared::PLAYER_ACTION AppearanceFlagDefaultAction::action() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagDefaultAction.action)
  return static_cast< ::tibia::protobuf::shared::PLAYER_ACTION >(action_);
}
inline void AppearanceFlagDefaultAction::set_action(::tibia::protobuf::shared::PLAYER_ACTION value) {
  assert(::tibia::protobuf::shared::PLAYER_ACTION_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagDefaultAction.action)
}

// -------------------------------------------------------------------

// AppearanceFlagMarket

// optional .tibia.protobuf.shared.ITEM_CATEGORY category = 1;
inline bool AppearanceFlagMarket::has_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagMarket::set_has_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagMarket::clear_has_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagMarket::clear_category() {
  category_ = 1;
  clear_has_category();
}
inline ::tibia::protobuf::shared::ITEM_CATEGORY AppearanceFlagMarket::category() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagMarket.category)
  return static_cast< ::tibia::protobuf::shared::ITEM_CATEGORY >(category_);
}
inline void AppearanceFlagMarket::set_category(::tibia::protobuf::shared::ITEM_CATEGORY value) {
  assert(::tibia::protobuf::shared::ITEM_CATEGORY_IsValid(value));
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagMarket.category)
}

// optional uint32 trade_as_object_id = 2;
inline bool AppearanceFlagMarket::has_trade_as_object_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppearanceFlagMarket::set_has_trade_as_object_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppearanceFlagMarket::clear_has_trade_as_object_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppearanceFlagMarket::clear_trade_as_object_id() {
  trade_as_object_id_ = 0u;
  clear_has_trade_as_object_id();
}
inline ::google::protobuf::uint32 AppearanceFlagMarket::trade_as_object_id() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagMarket.trade_as_object_id)
  return trade_as_object_id_;
}
inline void AppearanceFlagMarket::set_trade_as_object_id(::google::protobuf::uint32 value) {
  set_has_trade_as_object_id();
  trade_as_object_id_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagMarket.trade_as_object_id)
}

// optional uint32 show_as_object_id = 3;
inline bool AppearanceFlagMarket::has_show_as_object_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppearanceFlagMarket::set_has_show_as_object_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppearanceFlagMarket::clear_has_show_as_object_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppearanceFlagMarket::clear_show_as_object_id() {
  show_as_object_id_ = 0u;
  clear_has_show_as_object_id();
}
inline ::google::protobuf::uint32 AppearanceFlagMarket::show_as_object_id() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagMarket.show_as_object_id)
  return show_as_object_id_;
}
inline void AppearanceFlagMarket::set_show_as_object_id(::google::protobuf::uint32 value) {
  set_has_show_as_object_id();
  show_as_object_id_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagMarket.show_as_object_id)
}

// repeated .tibia.protobuf.shared.PLAYER_PROFESSION restrict_to_profession = 5;
inline int AppearanceFlagMarket::restrict_to_profession_size() const {
  return restrict_to_profession_.size();
}
inline void AppearanceFlagMarket::clear_restrict_to_profession() {
  restrict_to_profession_.Clear();
}
inline ::tibia::protobuf::shared::PLAYER_PROFESSION AppearanceFlagMarket::restrict_to_profession(int index) const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagMarket.restrict_to_profession)
  return static_cast< ::tibia::protobuf::shared::PLAYER_PROFESSION >(restrict_to_profession_.Get(index));
}
inline void AppearanceFlagMarket::set_restrict_to_profession(int index, ::tibia::protobuf::shared::PLAYER_PROFESSION value) {
  assert(::tibia::protobuf::shared::PLAYER_PROFESSION_IsValid(value));
  restrict_to_profession_.Set(index, value);
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagMarket.restrict_to_profession)
}
inline void AppearanceFlagMarket::add_restrict_to_profession(::tibia::protobuf::shared::PLAYER_PROFESSION value) {
  assert(::tibia::protobuf::shared::PLAYER_PROFESSION_IsValid(value));
  restrict_to_profession_.Add(value);
  // @@protoc_insertion_point(field_add:tibia.protobuf.appearances.AppearanceFlagMarket.restrict_to_profession)
}
inline const ::google::protobuf::RepeatedField<int>&
AppearanceFlagMarket::restrict_to_profession() const {
  // @@protoc_insertion_point(field_list:tibia.protobuf.appearances.AppearanceFlagMarket.restrict_to_profession)
  return restrict_to_profession_;
}
inline ::google::protobuf::RepeatedField<int>*
AppearanceFlagMarket::mutable_restrict_to_profession() {
  // @@protoc_insertion_point(field_mutable_list:tibia.protobuf.appearances.AppearanceFlagMarket.restrict_to_profession)
  return &restrict_to_profession_;
}

// optional uint32 minimum_level = 6;
inline bool AppearanceFlagMarket::has_minimum_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppearanceFlagMarket::set_has_minimum_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppearanceFlagMarket::clear_has_minimum_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppearanceFlagMarket::clear_minimum_level() {
  minimum_level_ = 0u;
  clear_has_minimum_level();
}
inline ::google::protobuf::uint32 AppearanceFlagMarket::minimum_level() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagMarket.minimum_level)
  return minimum_level_;
}
inline void AppearanceFlagMarket::set_minimum_level(::google::protobuf::uint32 value) {
  set_has_minimum_level();
  minimum_level_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagMarket.minimum_level)
}

// -------------------------------------------------------------------

// AppearanceFlagNPC

// optional string name = 1;
inline bool AppearanceFlagNPC::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagNPC::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagNPC::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagNPC::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AppearanceFlagNPC::name() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagNPC.name)
  return *name_;
}
inline void AppearanceFlagNPC::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagNPC.name)
}
inline void AppearanceFlagNPC::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:tibia.protobuf.appearances.AppearanceFlagNPC.name)
}
inline void AppearanceFlagNPC::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tibia.protobuf.appearances.AppearanceFlagNPC.name)
}
inline ::std::string* AppearanceFlagNPC::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlagNPC.name)
  return name_;
}
inline ::std::string* AppearanceFlagNPC::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppearanceFlagNPC::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlagNPC.name)
}

// optional string location = 2;
inline bool AppearanceFlagNPC::has_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppearanceFlagNPC::set_has_location() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppearanceFlagNPC::clear_has_location() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppearanceFlagNPC::clear_location() {
  if (location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_->clear();
  }
  clear_has_location();
}
inline const ::std::string& AppearanceFlagNPC::location() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagNPC.location)
  return *location_;
}
inline void AppearanceFlagNPC::set_location(const ::std::string& value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(value);
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagNPC.location)
}
inline void AppearanceFlagNPC::set_location(const char* value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(value);
  // @@protoc_insertion_point(field_set_char:tibia.protobuf.appearances.AppearanceFlagNPC.location)
}
inline void AppearanceFlagNPC::set_location(const char* value, size_t size) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  location_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tibia.protobuf.appearances.AppearanceFlagNPC.location)
}
inline ::std::string* AppearanceFlagNPC::mutable_location() {
  set_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tibia.protobuf.appearances.AppearanceFlagNPC.location)
  return location_;
}
inline ::std::string* AppearanceFlagNPC::release_location() {
  clear_has_location();
  if (location_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = location_;
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppearanceFlagNPC::set_allocated_location(::std::string* location) {
  if (location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete location_;
  }
  if (location) {
    set_has_location();
    location_ = location;
  } else {
    clear_has_location();
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tibia.protobuf.appearances.AppearanceFlagNPC.location)
}

// optional uint32 sale_price = 3;
inline bool AppearanceFlagNPC::has_sale_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppearanceFlagNPC::set_has_sale_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppearanceFlagNPC::clear_has_sale_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppearanceFlagNPC::clear_sale_price() {
  sale_price_ = 0u;
  clear_has_sale_price();
}
inline ::google::protobuf::uint32 AppearanceFlagNPC::sale_price() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagNPC.sale_price)
  return sale_price_;
}
inline void AppearanceFlagNPC::set_sale_price(::google::protobuf::uint32 value) {
  set_has_sale_price();
  sale_price_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagNPC.sale_price)
}

// optional uint32 buy_price = 4;
inline bool AppearanceFlagNPC::has_buy_price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppearanceFlagNPC::set_has_buy_price() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppearanceFlagNPC::clear_has_buy_price() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppearanceFlagNPC::clear_buy_price() {
  buy_price_ = 0u;
  clear_has_buy_price();
}
inline ::google::protobuf::uint32 AppearanceFlagNPC::buy_price() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagNPC.buy_price)
  return buy_price_;
}
inline void AppearanceFlagNPC::set_buy_price(::google::protobuf::uint32 value) {
  set_has_buy_price();
  buy_price_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagNPC.buy_price)
}

// -------------------------------------------------------------------

// AppearanceFlagAutomap

// optional uint32 color = 1;
inline bool AppearanceFlagAutomap::has_color() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagAutomap::set_has_color() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagAutomap::clear_has_color() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagAutomap::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 AppearanceFlagAutomap::color() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagAutomap.color)
  return color_;
}
inline void AppearanceFlagAutomap::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagAutomap.color)
}

// -------------------------------------------------------------------

// AppearanceFlagHook

// optional .tibia.protobuf.shared.HOOK_TYPE direction = 1;
inline bool AppearanceFlagHook::has_direction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagHook::set_has_direction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagHook::clear_has_direction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagHook::clear_direction() {
  direction_ = 1;
  clear_has_direction();
}
inline ::tibia::protobuf::shared::HOOK_TYPE AppearanceFlagHook::direction() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagHook.direction)
  return static_cast< ::tibia::protobuf::shared::HOOK_TYPE >(direction_);
}
inline void AppearanceFlagHook::set_direction(::tibia::protobuf::shared::HOOK_TYPE value) {
  assert(::tibia::protobuf::shared::HOOK_TYPE_IsValid(value));
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagHook.direction)
}

// -------------------------------------------------------------------

// AppearanceFlagLenshelp

// optional uint32 id = 1;
inline bool AppearanceFlagLenshelp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagLenshelp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagLenshelp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagLenshelp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AppearanceFlagLenshelp::id() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagLenshelp.id)
  return id_;
}
inline void AppearanceFlagLenshelp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagLenshelp.id)
}

// -------------------------------------------------------------------

// AppearanceFlagChangedToExpire

// optional uint32 former_object_typeid = 1;
inline bool AppearanceFlagChangedToExpire::has_former_object_typeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagChangedToExpire::set_has_former_object_typeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagChangedToExpire::clear_has_former_object_typeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagChangedToExpire::clear_former_object_typeid() {
  former_object_typeid_ = 0u;
  clear_has_former_object_typeid();
}
inline ::google::protobuf::uint32 AppearanceFlagChangedToExpire::former_object_typeid() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagChangedToExpire.former_object_typeid)
  return former_object_typeid_;
}
inline void AppearanceFlagChangedToExpire::set_former_object_typeid(::google::protobuf::uint32 value) {
  set_has_former_object_typeid();
  former_object_typeid_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagChangedToExpire.former_object_typeid)
}

// -------------------------------------------------------------------

// AppearanceFlagCyclopedia

// optional uint32 cyclopedia_type = 1;
inline bool AppearanceFlagCyclopedia::has_cyclopedia_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppearanceFlagCyclopedia::set_has_cyclopedia_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppearanceFlagCyclopedia::clear_has_cyclopedia_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppearanceFlagCyclopedia::clear_cyclopedia_type() {
  cyclopedia_type_ = 0u;
  clear_has_cyclopedia_type();
}
inline ::google::protobuf::uint32 AppearanceFlagCyclopedia::cyclopedia_type() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.AppearanceFlagCyclopedia.cyclopedia_type)
  return cyclopedia_type_;
}
inline void AppearanceFlagCyclopedia::set_cyclopedia_type(::google::protobuf::uint32 value) {
  set_has_cyclopedia_type();
  cyclopedia_type_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.AppearanceFlagCyclopedia.cyclopedia_type)
}

// -------------------------------------------------------------------

// SpecialMeaningAppearanceIds

// optional uint32 gold_coin_id = 1;
inline bool SpecialMeaningAppearanceIds::has_gold_coin_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecialMeaningAppearanceIds::set_has_gold_coin_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecialMeaningAppearanceIds::clear_has_gold_coin_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecialMeaningAppearanceIds::clear_gold_coin_id() {
  gold_coin_id_ = 0u;
  clear_has_gold_coin_id();
}
inline ::google::protobuf::uint32 SpecialMeaningAppearanceIds::gold_coin_id() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpecialMeaningAppearanceIds.gold_coin_id)
  return gold_coin_id_;
}
inline void SpecialMeaningAppearanceIds::set_gold_coin_id(::google::protobuf::uint32 value) {
  set_has_gold_coin_id();
  gold_coin_id_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpecialMeaningAppearanceIds.gold_coin_id)
}

// optional uint32 platinum_coin_id = 2;
inline bool SpecialMeaningAppearanceIds::has_platinum_coin_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpecialMeaningAppearanceIds::set_has_platinum_coin_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpecialMeaningAppearanceIds::clear_has_platinum_coin_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpecialMeaningAppearanceIds::clear_platinum_coin_id() {
  platinum_coin_id_ = 0u;
  clear_has_platinum_coin_id();
}
inline ::google::protobuf::uint32 SpecialMeaningAppearanceIds::platinum_coin_id() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpecialMeaningAppearanceIds.platinum_coin_id)
  return platinum_coin_id_;
}
inline void SpecialMeaningAppearanceIds::set_platinum_coin_id(::google::protobuf::uint32 value) {
  set_has_platinum_coin_id();
  platinum_coin_id_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpecialMeaningAppearanceIds.platinum_coin_id)
}

// optional uint32 crystal_coin_id = 3;
inline bool SpecialMeaningAppearanceIds::has_crystal_coin_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpecialMeaningAppearanceIds::set_has_crystal_coin_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpecialMeaningAppearanceIds::clear_has_crystal_coin_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpecialMeaningAppearanceIds::clear_crystal_coin_id() {
  crystal_coin_id_ = 0u;
  clear_has_crystal_coin_id();
}
inline ::google::protobuf::uint32 SpecialMeaningAppearanceIds::crystal_coin_id() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpecialMeaningAppearanceIds.crystal_coin_id)
  return crystal_coin_id_;
}
inline void SpecialMeaningAppearanceIds::set_crystal_coin_id(::google::protobuf::uint32 value) {
  set_has_crystal_coin_id();
  crystal_coin_id_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpecialMeaningAppearanceIds.crystal_coin_id)
}

// optional uint32 tibia_coin_id = 4;
inline bool SpecialMeaningAppearanceIds::has_tibia_coin_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SpecialMeaningAppearanceIds::set_has_tibia_coin_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SpecialMeaningAppearanceIds::clear_has_tibia_coin_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SpecialMeaningAppearanceIds::clear_tibia_coin_id() {
  tibia_coin_id_ = 0u;
  clear_has_tibia_coin_id();
}
inline ::google::protobuf::uint32 SpecialMeaningAppearanceIds::tibia_coin_id() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpecialMeaningAppearanceIds.tibia_coin_id)
  return tibia_coin_id_;
}
inline void SpecialMeaningAppearanceIds::set_tibia_coin_id(::google::protobuf::uint32 value) {
  set_has_tibia_coin_id();
  tibia_coin_id_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpecialMeaningAppearanceIds.tibia_coin_id)
}

// optional uint32 stamped_letter_id = 5;
inline bool SpecialMeaningAppearanceIds::has_stamped_letter_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SpecialMeaningAppearanceIds::set_has_stamped_letter_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SpecialMeaningAppearanceIds::clear_has_stamped_letter_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SpecialMeaningAppearanceIds::clear_stamped_letter_id() {
  stamped_letter_id_ = 0u;
  clear_has_stamped_letter_id();
}
inline ::google::protobuf::uint32 SpecialMeaningAppearanceIds::stamped_letter_id() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpecialMeaningAppearanceIds.stamped_letter_id)
  return stamped_letter_id_;
}
inline void SpecialMeaningAppearanceIds::set_stamped_letter_id(::google::protobuf::uint32 value) {
  set_has_stamped_letter_id();
  stamped_letter_id_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpecialMeaningAppearanceIds.stamped_letter_id)
}

// optional uint32 supply_stash_id = 6;
inline bool SpecialMeaningAppearanceIds::has_supply_stash_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SpecialMeaningAppearanceIds::set_has_supply_stash_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SpecialMeaningAppearanceIds::clear_has_supply_stash_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SpecialMeaningAppearanceIds::clear_supply_stash_id() {
  supply_stash_id_ = 0u;
  clear_has_supply_stash_id();
}
inline ::google::protobuf::uint32 SpecialMeaningAppearanceIds::supply_stash_id() const {
  // @@protoc_insertion_point(field_get:tibia.protobuf.appearances.SpecialMeaningAppearanceIds.supply_stash_id)
  return supply_stash_id_;
}
inline void SpecialMeaningAppearanceIds::set_supply_stash_id(::google::protobuf::uint32 value) {
  set_has_supply_stash_id();
  supply_stash_id_ = value;
  // @@protoc_insertion_point(field_set:tibia.protobuf.appearances.SpecialMeaningAppearanceIds.supply_stash_id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace appearances
}  // namespace protobuf
}  // namespace tibia

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tibia::protobuf::appearances::FIXED_FRAME_GROUP> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tibia::protobuf::appearances::FIXED_FRAME_GROUP>() {
  return ::tibia::protobuf::appearances::FIXED_FRAME_GROUP_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_appearances_2eproto__INCLUDED
